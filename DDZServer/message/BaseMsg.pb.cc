// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BaseMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zhu {
class SelfDescribingMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SelfDescribingMessage> {
} _SelfDescribingMessage_default_instance_;
class ErrorMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ErrorMessage> {
} _ErrorMessage_default_instance_;

namespace protobuf_BaseMsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelfDescribingMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelfDescribingMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelfDescribingMessage, type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelfDescribingMessage, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelfDescribingMessage, message_data_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, desc_),
  1,
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(SelfDescribingMessage)},
  { 11, 18, sizeof(ErrorMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelfDescribingMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ErrorMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "BaseMsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _SelfDescribingMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ErrorMessage_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SelfDescribingMessage_default_instance_.DefaultConstruct();
  _ErrorMessage_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rBaseMsg.proto\022\003zhu\"P\n\025SelfDescribingMe"
      "ssage\022\021\n\ttype_name\030\001 \002(\014\022\016\n\006socket\030\002 \003(\005"
      "\022\024\n\014message_data\030\003 \002(\014\",\n\014ErrorMessage\022\016"
      "\n\002id\030\001 \001(\005:\002-1\022\014\n\004desc\030\002 \001(\014"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 148);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BaseMsg.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_BaseMsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelfDescribingMessage::kTypeNameFieldNumber;
const int SelfDescribingMessage::kSocketFieldNumber;
const int SelfDescribingMessage::kMessageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelfDescribingMessage::SelfDescribingMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.SelfDescribingMessage)
}
SelfDescribingMessage::SelfDescribingMessage(const SelfDescribingMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      socket_(from.socket_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type_name()) {
    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  message_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message_data()) {
    message_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_data_);
  }
  // @@protoc_insertion_point(copy_constructor:zhu.SelfDescribingMessage)
}

void SelfDescribingMessage::SharedCtor() {
  _cached_size_ = 0;
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SelfDescribingMessage::~SelfDescribingMessage() {
  // @@protoc_insertion_point(destructor:zhu.SelfDescribingMessage)
  SharedDtor();
}

void SelfDescribingMessage::SharedDtor() {
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelfDescribingMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelfDescribingMessage::descriptor() {
  protobuf_BaseMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelfDescribingMessage& SelfDescribingMessage::default_instance() {
  protobuf_BaseMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelfDescribingMessage* SelfDescribingMessage::New(::google::protobuf::Arena* arena) const {
  SelfDescribingMessage* n = new SelfDescribingMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelfDescribingMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.SelfDescribingMessage)
  socket_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_type_name()) {
      GOOGLE_DCHECK(!type_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_message_data()) {
      GOOGLE_DCHECK(!message_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_data_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelfDescribingMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.SelfDescribingMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes type_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_type_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 socket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_socket())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_socket())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes message_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.SelfDescribingMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.SelfDescribingMessage)
  return false;
#undef DO_
}

void SelfDescribingMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.SelfDescribingMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->type_name(), output);
  }

  // repeated int32 socket = 2;
  for (int i = 0, n = this->socket_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->socket(i), output);
  }

  // required bytes message_data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.SelfDescribingMessage)
}

::google::protobuf::uint8* SelfDescribingMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.SelfDescribingMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->type_name(), target);
  }

  // repeated int32 socket = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->socket_, target);

  // required bytes message_data = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.SelfDescribingMessage)
  return target;
}

size_t SelfDescribingMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.SelfDescribingMessage)
  size_t total_size = 0;

  if (has_type_name()) {
    // required bytes type_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->type_name());
  }

  if (has_message_data()) {
    // required bytes message_data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message_data());
  }

  return total_size;
}
size_t SelfDescribingMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.SelfDescribingMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes type_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->type_name());

    // required bytes message_data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message_data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 socket = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->socket_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->socket_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelfDescribingMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.SelfDescribingMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SelfDescribingMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelfDescribingMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.SelfDescribingMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.SelfDescribingMessage)
    MergeFrom(*source);
  }
}

void SelfDescribingMessage::MergeFrom(const SelfDescribingMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.SelfDescribingMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  socket_.MergeFrom(from.socket_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type_name();
      type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_message_data();
      message_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_data_);
    }
  }
}

void SelfDescribingMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.SelfDescribingMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelfDescribingMessage::CopyFrom(const SelfDescribingMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.SelfDescribingMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelfDescribingMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SelfDescribingMessage::Swap(SelfDescribingMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelfDescribingMessage::InternalSwap(SelfDescribingMessage* other) {
  socket_.InternalSwap(&other->socket_);
  type_name_.Swap(&other->type_name_);
  message_data_.Swap(&other->message_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelfDescribingMessage::GetMetadata() const {
  protobuf_BaseMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelfDescribingMessage

// required bytes type_name = 1;
bool SelfDescribingMessage::has_type_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SelfDescribingMessage::set_has_type_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SelfDescribingMessage::clear_has_type_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SelfDescribingMessage::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type_name();
}
const ::std::string& SelfDescribingMessage::type_name() const {
  // @@protoc_insertion_point(field_get:zhu.SelfDescribingMessage.type_name)
  return type_name_.GetNoArena();
}
void SelfDescribingMessage::set_type_name(const ::std::string& value) {
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.SelfDescribingMessage.type_name)
}
#if LANG_CXX11
void SelfDescribingMessage::set_type_name(::std::string&& value) {
  set_has_type_name();
  type_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.SelfDescribingMessage.type_name)
}
#endif
void SelfDescribingMessage::set_type_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.SelfDescribingMessage.type_name)
}
void SelfDescribingMessage::set_type_name(const void* value, size_t size) {
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.SelfDescribingMessage.type_name)
}
::std::string* SelfDescribingMessage::mutable_type_name() {
  set_has_type_name();
  // @@protoc_insertion_point(field_mutable:zhu.SelfDescribingMessage.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelfDescribingMessage::release_type_name() {
  // @@protoc_insertion_point(field_release:zhu.SelfDescribingMessage.type_name)
  clear_has_type_name();
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelfDescribingMessage::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    set_has_type_name();
  } else {
    clear_has_type_name();
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:zhu.SelfDescribingMessage.type_name)
}

// repeated int32 socket = 2;
int SelfDescribingMessage::socket_size() const {
  return socket_.size();
}
void SelfDescribingMessage::clear_socket() {
  socket_.Clear();
}
::google::protobuf::int32 SelfDescribingMessage::socket(int index) const {
  // @@protoc_insertion_point(field_get:zhu.SelfDescribingMessage.socket)
  return socket_.Get(index);
}
void SelfDescribingMessage::set_socket(int index, ::google::protobuf::int32 value) {
  socket_.Set(index, value);
  // @@protoc_insertion_point(field_set:zhu.SelfDescribingMessage.socket)
}
void SelfDescribingMessage::add_socket(::google::protobuf::int32 value) {
  socket_.Add(value);
  // @@protoc_insertion_point(field_add:zhu.SelfDescribingMessage.socket)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SelfDescribingMessage::socket() const {
  // @@protoc_insertion_point(field_list:zhu.SelfDescribingMessage.socket)
  return socket_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SelfDescribingMessage::mutable_socket() {
  // @@protoc_insertion_point(field_mutable_list:zhu.SelfDescribingMessage.socket)
  return &socket_;
}

// required bytes message_data = 3;
bool SelfDescribingMessage::has_message_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SelfDescribingMessage::set_has_message_data() {
  _has_bits_[0] |= 0x00000002u;
}
void SelfDescribingMessage::clear_has_message_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void SelfDescribingMessage::clear_message_data() {
  message_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_data();
}
const ::std::string& SelfDescribingMessage::message_data() const {
  // @@protoc_insertion_point(field_get:zhu.SelfDescribingMessage.message_data)
  return message_data_.GetNoArena();
}
void SelfDescribingMessage::set_message_data(const ::std::string& value) {
  set_has_message_data();
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.SelfDescribingMessage.message_data)
}
#if LANG_CXX11
void SelfDescribingMessage::set_message_data(::std::string&& value) {
  set_has_message_data();
  message_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.SelfDescribingMessage.message_data)
}
#endif
void SelfDescribingMessage::set_message_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message_data();
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.SelfDescribingMessage.message_data)
}
void SelfDescribingMessage::set_message_data(const void* value, size_t size) {
  set_has_message_data();
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.SelfDescribingMessage.message_data)
}
::std::string* SelfDescribingMessage::mutable_message_data() {
  set_has_message_data();
  // @@protoc_insertion_point(field_mutable:zhu.SelfDescribingMessage.message_data)
  return message_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelfDescribingMessage::release_message_data() {
  // @@protoc_insertion_point(field_release:zhu.SelfDescribingMessage.message_data)
  clear_has_message_data();
  return message_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelfDescribingMessage::set_allocated_message_data(::std::string* message_data) {
  if (message_data != NULL) {
    set_has_message_data();
  } else {
    clear_has_message_data();
  }
  message_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_data);
  // @@protoc_insertion_point(field_set_allocated:zhu.SelfDescribingMessage.message_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorMessage::kIdFieldNumber;
const int ErrorMessage::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorMessage::ErrorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.ErrorMessage)
}
ErrorMessage::ErrorMessage(const ErrorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:zhu.ErrorMessage)
}

void ErrorMessage::SharedCtor() {
  _cached_size_ = 0;
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = -1;
}

ErrorMessage::~ErrorMessage() {
  // @@protoc_insertion_point(destructor:zhu.ErrorMessage)
  SharedDtor();
}

void ErrorMessage::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorMessage::descriptor() {
  protobuf_BaseMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorMessage& ErrorMessage::default_instance() {
  protobuf_BaseMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

ErrorMessage* ErrorMessage::New(::google::protobuf::Arena* arena) const {
  ErrorMessage* n = new ErrorMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.ErrorMessage)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ErrorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.ErrorMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.ErrorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.ErrorMessage)
  return false;
#undef DO_
}

void ErrorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.ErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->desc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.ErrorMessage)
}

::google::protobuf::uint8* ErrorMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.ErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.ErrorMessage)
  return target;
}

size_t ErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.ErrorMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes desc = 2;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }

    // optional int32 id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.ErrorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.ErrorMessage)
    MergeFrom(*source);
  }
}

void ErrorMessage::MergeFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ErrorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorMessage::CopyFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorMessage::IsInitialized() const {
  return true;
}

void ErrorMessage::Swap(ErrorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorMessage::InternalSwap(ErrorMessage* other) {
  desc_.Swap(&other->desc_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorMessage::GetMetadata() const {
  protobuf_BaseMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorMessage

// optional int32 id = 1 [default = -1];
bool ErrorMessage::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ErrorMessage::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ErrorMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ErrorMessage::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 ErrorMessage::id() const {
  // @@protoc_insertion_point(field_get:zhu.ErrorMessage.id)
  return id_;
}
void ErrorMessage::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:zhu.ErrorMessage.id)
}

// optional bytes desc = 2;
bool ErrorMessage::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ErrorMessage::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
void ErrorMessage::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
void ErrorMessage::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& ErrorMessage::desc() const {
  // @@protoc_insertion_point(field_get:zhu.ErrorMessage.desc)
  return desc_.GetNoArena();
}
void ErrorMessage::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.ErrorMessage.desc)
}
#if LANG_CXX11
void ErrorMessage::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.ErrorMessage.desc)
}
#endif
void ErrorMessage::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.ErrorMessage.desc)
}
void ErrorMessage::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.ErrorMessage.desc)
}
::std::string* ErrorMessage::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:zhu.ErrorMessage.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorMessage::release_desc() {
  // @@protoc_insertion_point(field_release:zhu.ErrorMessage.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorMessage::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:zhu.ErrorMessage.desc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zhu

// @@protoc_insertion_point(global_scope)
