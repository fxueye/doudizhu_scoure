// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "player.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zhu {
namespace user {
class LoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq> {
} _LoginReq_default_instance_;
class LoginRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginResp> {
} _LoginResp_default_instance_;
class LogoutReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutReq> {
} _LogoutReq_default_instance_;
class LogoutRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutResp> {
} _LogoutResp_default_instance_;
class Player_PhoneNumberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Player_PhoneNumber> {
} _Player_PhoneNumber_default_instance_;
class PlayerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Player> {
} _Player_default_instance_;
class OnlineOfflineNotifyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnlineOfflineNotify> {
} _OnlineOfflineNotify_default_instance_;

namespace protobuf_player_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, verifycode_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, loginresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, account_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, account_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResp, logoutresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player_PhoneNumber, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player_PhoneNumber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player_PhoneNumber, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player_PhoneNumber, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, phones_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player, desc_),
  9,
  5,
  0,
  1,
  2,
  3,
  6,
  ~0u,
  7,
  8,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineOfflineNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineOfflineNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineOfflineNotify, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineOfflineNotify, online_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(LoginReq)},
  { 11, 20, sizeof(LoginResp)},
  { 24, 31, sizeof(LogoutReq)},
  { 33, 39, sizeof(LogoutResp)},
  { 40, 47, sizeof(Player_PhoneNumber)},
  { 49, 65, sizeof(Player)},
  { 76, 83, sizeof(OnlineOfflineNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Player_PhoneNumber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnlineOfflineNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "player.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _LoginReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LoginResp_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _LogoutReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _LogoutResp_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Player_PhoneNumber_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Player_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _OnlineOfflineNotify_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _LoginReq_default_instance_.DefaultConstruct();
  _LoginResp_default_instance_.DefaultConstruct();
  _LogoutReq_default_instance_.DefaultConstruct();
  _LogoutResp_default_instance_.DefaultConstruct();
  _Player_PhoneNumber_default_instance_.DefaultConstruct();
  _Player_default_instance_.DefaultConstruct();
  _OnlineOfflineNotify_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014player.proto\022\010zhu.user\"A\n\010LoginReq\022\017\n\007"
      "account\030\001 \002(\014\022\020\n\010password\030\002 \002(\014\022\022\n\nverif"
      "yCode\030\003 \001(\014\"a\n\tLoginResp\022)\n\013loginResult\030"
      "\001 \002(\0162\024.zhu.user.ERROR_CODE\022\014\n\004desc\030\002 \001("
      "\014\022\n\n\002id\030\003 \001(\r\022\017\n\007account\030\004 \001(\014\"(\n\tLogout"
      "Req\022\n\n\002id\030\001 \002(\r\022\017\n\007account\030\002 \002(\014\"8\n\nLogo"
      "utResp\022*\n\014logoutResult\030\001 \002(\0162\024.zhu.user."
      "ERROR_CODE\"\246\003\n\006Player\022\022\n\006socket\030\001 \002(\005:\002-"
      "1\022\r\n\002id\030\002 \002(\r:\0010\022\017\n\007account\030\003 \002(\014\022\020\n\010pas"
      "sword\030\004 \002(\014\022\014\n\004name\030\005 \002(\014\022\r\n\005email\030\006 \001(\014"
      "\022+\n\003sex\030\007 \001(\0162\030.zhu.user.Player.SexType:"
      "\004MALE\022,\n\006phones\030\010 \003(\0132\034.zhu.user.Player."
      "PhoneNumber\022$\n\006status\030\t \001(\0162\024.zhu.user.U"
      "serStatus\022\r\n\005money\030\n \001(\005\022\014\n\004desc\030\013 \001(\014\032M"
      "\n\013PhoneNumber\022\016\n\006number\030\001 \002(\014\022.\n\004type\030\002 "
      "\001(\0162\032.zhu.user.Player.PhoneType:\004HOME\"\037\n"
      "\007SexType\022\010\n\004MALE\020\000\022\n\n\006FEMALE\020\001\"+\n\tPhoneT"
      "ype\022\n\n\006MOBILE\020\000\022\010\n\004HOME\020\001\022\010\n\004WORK\020\002\"6\n\023O"
      "nlineOfflineNotify\022\017\n\007account\030\001 \002(\014\022\016\n\006o"
      "nline\030\003 \002(\010*4\n\nUserStatus\022\013\n\007OFFLINE\020\000\022\n"
      "\n\006ONLINE\020\001\022\r\n\tFORBIDDEN\020\002*\205\001\n\nERROR_CODE"
      "\022\013\n\007SUCCESS\020\000\022\025\n\021ACCOUNT_NOT_EXIST\020\001\022\033\n\027"
      "ACCOUNT_OR_PASSWD_ERROR\020\002\022\021\n\rALREADY_LOG"
      "ON\020\003\022\021\n\rILLEGAL_PARAM\020\004\022\020\n\014SERVER_ERROR\020"
      "\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 961);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_player_2eproto

const ::google::protobuf::EnumDescriptor* Player_SexType_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[0];
}
bool Player_SexType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Player_SexType Player::MALE;
const Player_SexType Player::FEMALE;
const Player_SexType Player::SexType_MIN;
const Player_SexType Player::SexType_MAX;
const int Player::SexType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Player_PhoneType_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[1];
}
bool Player_PhoneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Player_PhoneType Player::MOBILE;
const Player_PhoneType Player::HOME;
const Player_PhoneType Player::WORK;
const Player_PhoneType Player::PhoneType_MIN;
const Player_PhoneType Player::PhoneType_MAX;
const int Player::PhoneType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserStatus_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[2];
}
bool UserStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ERROR_CODE_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[3];
}
bool ERROR_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kAccountFieldNumber;
const int LoginReq::kPasswordFieldNumber;
const int LoginReq::kVerifyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.user.LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  verifycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifycode()) {
    verifycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycode_);
  }
  // @@protoc_insertion_point(copy_constructor:zhu.user.LoginReq)
}

void LoginReq::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:zhu.user.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReq& LoginReq::default_instance() {
  protobuf_player_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.user.LoginReq)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_verifycode()) {
      GOOGLE_DCHECK(!verifycode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifycode_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.user.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes verifyCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_verifycode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.user.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.user.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.user.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // required bytes password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->password(), output);
  }

  // optional bytes verifyCode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->verifycode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.user.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.user.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // required bytes password = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->password(), target);
  }

  // optional bytes verifyCode = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->verifycode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.user.LoginReq)
  return target;
}

size_t LoginReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.user.LoginReq)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_password()) {
    // required bytes password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  return total_size;
}
size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.user.LoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required bytes password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes verifyCode = 3;
  if (has_verifycode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->verifycode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.user.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.user.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.user.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.user.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_verifycode();
      verifycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycode_);
    }
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.user.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.user.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  verifycode_.Swap(&other->verifycode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// required bytes account = 1;
bool LoginReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& LoginReq::account() const {
  // @@protoc_insertion_point(field_get:zhu.user.LoginReq.account)
  return account_.GetNoArena();
}
void LoginReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.LoginReq.account)
}
#if LANG_CXX11
void LoginReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.LoginReq.account)
}
#endif
void LoginReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.LoginReq.account)
}
void LoginReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.LoginReq.account)
}
::std::string* LoginReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.user.LoginReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_account() {
  // @@protoc_insertion_point(field_release:zhu.user.LoginReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.LoginReq.account)
}

// required bytes password = 2;
bool LoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginReq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& LoginReq::password() const {
  // @@protoc_insertion_point(field_get:zhu.user.LoginReq.password)
  return password_.GetNoArena();
}
void LoginReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.LoginReq.password)
}
#if LANG_CXX11
void LoginReq::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.LoginReq.password)
}
#endif
void LoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.LoginReq.password)
}
void LoginReq::set_password(const void* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.LoginReq.password)
}
::std::string* LoginReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:zhu.user.LoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_password() {
  // @@protoc_insertion_point(field_release:zhu.user.LoginReq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.LoginReq.password)
}

// optional bytes verifyCode = 3;
bool LoginReq::has_verifycode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoginReq::set_has_verifycode() {
  _has_bits_[0] |= 0x00000004u;
}
void LoginReq::clear_has_verifycode() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoginReq::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifycode();
}
const ::std::string& LoginReq::verifycode() const {
  // @@protoc_insertion_point(field_get:zhu.user.LoginReq.verifyCode)
  return verifycode_.GetNoArena();
}
void LoginReq::set_verifycode(const ::std::string& value) {
  set_has_verifycode();
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.LoginReq.verifyCode)
}
#if LANG_CXX11
void LoginReq::set_verifycode(::std::string&& value) {
  set_has_verifycode();
  verifycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.LoginReq.verifyCode)
}
#endif
void LoginReq::set_verifycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifycode();
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.LoginReq.verifyCode)
}
void LoginReq::set_verifycode(const void* value, size_t size) {
  set_has_verifycode();
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.LoginReq.verifyCode)
}
::std::string* LoginReq::mutable_verifycode() {
  set_has_verifycode();
  // @@protoc_insertion_point(field_mutable:zhu.user.LoginReq.verifyCode)
  return verifycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_verifycode() {
  // @@protoc_insertion_point(field_release:zhu.user.LoginReq.verifyCode)
  clear_has_verifycode();
  return verifycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_verifycode(::std::string* verifycode) {
  if (verifycode != NULL) {
    set_has_verifycode();
  } else {
    clear_has_verifycode();
  }
  verifycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.LoginReq.verifyCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResp::kLoginResultFieldNumber;
const int LoginResp::kDescFieldNumber;
const int LoginResp::kIdFieldNumber;
const int LoginResp::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResp::LoginResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.user.LoginResp)
}
LoginResp::LoginResp(const LoginResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ::memcpy(&loginresult_, &from.loginresult_,
    reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&loginresult_) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:zhu.user.LoginResp)
}

void LoginResp::SharedCtor() {
  _cached_size_ = 0;
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&loginresult_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&loginresult_) + sizeof(id_));
}

LoginResp::~LoginResp() {
  // @@protoc_insertion_point(destructor:zhu.user.LoginResp)
  SharedDtor();
}

void LoginResp::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResp::descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginResp& LoginResp::default_instance() {
  protobuf_player_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginResp* LoginResp::New(::google::protobuf::Arena* arena) const {
  LoginResp* n = new LoginResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResp::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.user.LoginResp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&loginresult_, 0, reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&loginresult_) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.user.LoginResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .zhu.user.ERROR_CODE loginResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::user::ERROR_CODE_IsValid(value)) {
            set_loginresult(static_cast< ::zhu::user::ERROR_CODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.user.LoginResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.user.LoginResp)
  return false;
#undef DO_
}

void LoginResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.user.LoginResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.user.ERROR_CODE loginResult = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->loginresult(), output);
  }

  // optional bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->desc(), output);
  }

  // optional uint32 id = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  // optional bytes account = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.user.LoginResp)
}

::google::protobuf::uint8* LoginResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.user.LoginResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.user.ERROR_CODE loginResult = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->loginresult(), target);
  }

  // optional bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  // optional uint32 id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  // optional bytes account = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.user.LoginResp)
  return target;
}

size_t LoginResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.user.LoginResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .zhu.user.ERROR_CODE loginResult = 1;
  if (has_loginresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->loginresult());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes desc = 2;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }

    // optional bytes account = 4;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->account());
    }

  }
  // optional uint32 id = 3;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.user.LoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.user.LoginResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.user.LoginResp)
    MergeFrom(*source);
  }
}

void LoginResp::MergeFrom(const LoginResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.user.LoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000004u) {
      loginresult_ = from.loginresult_;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.user.LoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResp::CopyFrom(const LoginResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.user.LoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void LoginResp::Swap(LoginResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResp::InternalSwap(LoginResp* other) {
  desc_.Swap(&other->desc_);
  account_.Swap(&other->account_);
  std::swap(loginresult_, other->loginresult_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResp

// required .zhu.user.ERROR_CODE loginResult = 1;
bool LoginResp::has_loginresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoginResp::set_has_loginresult() {
  _has_bits_[0] |= 0x00000004u;
}
void LoginResp::clear_has_loginresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoginResp::clear_loginresult() {
  loginresult_ = 0;
  clear_has_loginresult();
}
::zhu::user::ERROR_CODE LoginResp::loginresult() const {
  // @@protoc_insertion_point(field_get:zhu.user.LoginResp.loginResult)
  return static_cast< ::zhu::user::ERROR_CODE >(loginresult_);
}
void LoginResp::set_loginresult(::zhu::user::ERROR_CODE value) {
  assert(::zhu::user::ERROR_CODE_IsValid(value));
  set_has_loginresult();
  loginresult_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.LoginResp.loginResult)
}

// optional bytes desc = 2;
bool LoginResp::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginResp::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginResp::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginResp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& LoginResp::desc() const {
  // @@protoc_insertion_point(field_get:zhu.user.LoginResp.desc)
  return desc_.GetNoArena();
}
void LoginResp::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.LoginResp.desc)
}
#if LANG_CXX11
void LoginResp::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.LoginResp.desc)
}
#endif
void LoginResp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.LoginResp.desc)
}
void LoginResp::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.LoginResp.desc)
}
::std::string* LoginResp::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:zhu.user.LoginResp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResp::release_desc() {
  // @@protoc_insertion_point(field_release:zhu.user.LoginResp.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.LoginResp.desc)
}

// optional uint32 id = 3;
bool LoginResp::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LoginResp::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
void LoginResp::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void LoginResp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 LoginResp::id() const {
  // @@protoc_insertion_point(field_get:zhu.user.LoginResp.id)
  return id_;
}
void LoginResp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.LoginResp.id)
}

// optional bytes account = 4;
bool LoginResp::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginResp::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginResp::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginResp::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& LoginResp::account() const {
  // @@protoc_insertion_point(field_get:zhu.user.LoginResp.account)
  return account_.GetNoArena();
}
void LoginResp::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.LoginResp.account)
}
#if LANG_CXX11
void LoginResp::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.LoginResp.account)
}
#endif
void LoginResp::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.LoginResp.account)
}
void LoginResp::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.LoginResp.account)
}
::std::string* LoginResp::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.user.LoginResp.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResp::release_account() {
  // @@protoc_insertion_point(field_release:zhu.user.LoginResp.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResp::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.LoginResp.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutReq::kIdFieldNumber;
const int LogoutReq::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutReq::LogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.user.LogoutReq)
}
LogoutReq::LogoutReq(const LogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:zhu.user.LogoutReq)
}

void LogoutReq::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

LogoutReq::~LogoutReq() {
  // @@protoc_insertion_point(destructor:zhu.user.LogoutReq)
  SharedDtor();
}

void LogoutReq::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq::descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogoutReq& LogoutReq::default_instance() {
  protobuf_player_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutReq* LogoutReq::New(::google::protobuf::Arena* arena) const {
  LogoutReq* n = new LogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.user.LogoutReq)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.user.LogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.user.LogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.user.LogoutReq)
  return false;
#undef DO_
}

void LogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.user.LogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required bytes account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.user.LogoutReq)
}

::google::protobuf::uint8* LogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.user.LogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required bytes account = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.user.LogoutReq)
  return target;
}

size_t LogoutReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.user.LogoutReq)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  return total_size;
}
size_t LogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.user.LogoutReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.user.LogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.user.LogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.user.LogoutReq)
    MergeFrom(*source);
  }
}

void LogoutReq::MergeFrom(const LogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.user.LogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.user.LogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq::CopyFrom(const LogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.user.LogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LogoutReq::Swap(LogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutReq::InternalSwap(LogoutReq* other) {
  account_.Swap(&other->account_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutReq

// required uint32 id = 1;
bool LogoutReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LogoutReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void LogoutReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void LogoutReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 LogoutReq::id() const {
  // @@protoc_insertion_point(field_get:zhu.user.LogoutReq.id)
  return id_;
}
void LogoutReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.LogoutReq.id)
}

// required bytes account = 2;
bool LogoutReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LogoutReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void LogoutReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void LogoutReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& LogoutReq::account() const {
  // @@protoc_insertion_point(field_get:zhu.user.LogoutReq.account)
  return account_.GetNoArena();
}
void LogoutReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.LogoutReq.account)
}
#if LANG_CXX11
void LogoutReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.LogoutReq.account)
}
#endif
void LogoutReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.LogoutReq.account)
}
void LogoutReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.LogoutReq.account)
}
::std::string* LogoutReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.user.LogoutReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogoutReq::release_account() {
  // @@protoc_insertion_point(field_release:zhu.user.LogoutReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogoutReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.LogoutReq.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutResp::kLogoutResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutResp::LogoutResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.user.LogoutResp)
}
LogoutResp::LogoutResp(const LogoutResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logoutresult_ = from.logoutresult_;
  // @@protoc_insertion_point(copy_constructor:zhu.user.LogoutResp)
}

void LogoutResp::SharedCtor() {
  _cached_size_ = 0;
  logoutresult_ = 0;
}

LogoutResp::~LogoutResp() {
  // @@protoc_insertion_point(destructor:zhu.user.LogoutResp)
  SharedDtor();
}

void LogoutResp::SharedDtor() {
}

void LogoutResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutResp::descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogoutResp& LogoutResp::default_instance() {
  protobuf_player_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutResp* LogoutResp::New(::google::protobuf::Arena* arena) const {
  LogoutResp* n = new LogoutResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutResp::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.user.LogoutResp)
  logoutresult_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogoutResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.user.LogoutResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .zhu.user.ERROR_CODE logoutResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::user::ERROR_CODE_IsValid(value)) {
            set_logoutresult(static_cast< ::zhu::user::ERROR_CODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.user.LogoutResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.user.LogoutResp)
  return false;
#undef DO_
}

void LogoutResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.user.LogoutResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.user.ERROR_CODE logoutResult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->logoutresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.user.LogoutResp)
}

::google::protobuf::uint8* LogoutResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.user.LogoutResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.user.ERROR_CODE logoutResult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->logoutresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.user.LogoutResp)
  return target;
}

size_t LogoutResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.user.LogoutResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .zhu.user.ERROR_CODE logoutResult = 1;
  if (has_logoutresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->logoutresult());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.user.LogoutResp)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.user.LogoutResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.user.LogoutResp)
    MergeFrom(*source);
  }
}

void LogoutResp::MergeFrom(const LogoutResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.user.LogoutResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logoutresult()) {
    set_logoutresult(from.logoutresult());
  }
}

void LogoutResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.user.LogoutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutResp::CopyFrom(const LogoutResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.user.LogoutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LogoutResp::Swap(LogoutResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutResp::InternalSwap(LogoutResp* other) {
  std::swap(logoutresult_, other->logoutresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutResp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutResp

// required .zhu.user.ERROR_CODE logoutResult = 1;
bool LogoutResp::has_logoutresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LogoutResp::set_has_logoutresult() {
  _has_bits_[0] |= 0x00000001u;
}
void LogoutResp::clear_has_logoutresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void LogoutResp::clear_logoutresult() {
  logoutresult_ = 0;
  clear_has_logoutresult();
}
::zhu::user::ERROR_CODE LogoutResp::logoutresult() const {
  // @@protoc_insertion_point(field_get:zhu.user.LogoutResp.logoutResult)
  return static_cast< ::zhu::user::ERROR_CODE >(logoutresult_);
}
void LogoutResp::set_logoutresult(::zhu::user::ERROR_CODE value) {
  assert(::zhu::user::ERROR_CODE_IsValid(value));
  set_has_logoutresult();
  logoutresult_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.LogoutResp.logoutResult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Player_PhoneNumber::kNumberFieldNumber;
const int Player_PhoneNumber::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Player_PhoneNumber::Player_PhoneNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.user.Player.PhoneNumber)
}
Player_PhoneNumber::Player_PhoneNumber(const Player_PhoneNumber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_number()) {
    number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:zhu.user.Player.PhoneNumber)
}

void Player_PhoneNumber::SharedCtor() {
  _cached_size_ = 0;
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
}

Player_PhoneNumber::~Player_PhoneNumber() {
  // @@protoc_insertion_point(destructor:zhu.user.Player.PhoneNumber)
  SharedDtor();
}

void Player_PhoneNumber::SharedDtor() {
  number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Player_PhoneNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Player_PhoneNumber::descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Player_PhoneNumber& Player_PhoneNumber::default_instance() {
  protobuf_player_2eproto::InitDefaults();
  return *internal_default_instance();
}

Player_PhoneNumber* Player_PhoneNumber::New(::google::protobuf::Arena* arena) const {
  Player_PhoneNumber* n = new Player_PhoneNumber;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Player_PhoneNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.user.Player.PhoneNumber)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_number()) {
      GOOGLE_DCHECK(!number_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*number_.UnsafeRawStringPointer())->clear();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Player_PhoneNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.user.Player.PhoneNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.user.Player.PhoneType type = 2 [default = HOME];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::user::Player_PhoneType_IsValid(value)) {
            set_type(static_cast< ::zhu::user::Player_PhoneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.user.Player.PhoneNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.user.Player.PhoneNumber)
  return false;
#undef DO_
}

void Player_PhoneNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.user.Player.PhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->number(), output);
  }

  // optional .zhu.user.Player.PhoneType type = 2 [default = HOME];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.user.Player.PhoneNumber)
}

::google::protobuf::uint8* Player_PhoneNumber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.user.Player.PhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes number = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->number(), target);
  }

  // optional .zhu.user.Player.PhoneType type = 2 [default = HOME];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.user.Player.PhoneNumber)
  return target;
}

size_t Player_PhoneNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.user.Player.PhoneNumber)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required bytes number = 1;
  if (has_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->number());
  }
  // optional .zhu.user.Player.PhoneType type = 2 [default = HOME];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Player_PhoneNumber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.user.Player.PhoneNumber)
  GOOGLE_DCHECK_NE(&from, this);
  const Player_PhoneNumber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Player_PhoneNumber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.user.Player.PhoneNumber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.user.Player.PhoneNumber)
    MergeFrom(*source);
  }
}

void Player_PhoneNumber::MergeFrom(const Player_PhoneNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.user.Player.PhoneNumber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_number();
      number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Player_PhoneNumber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.user.Player.PhoneNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Player_PhoneNumber::CopyFrom(const Player_PhoneNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.user.Player.PhoneNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Player_PhoneNumber::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Player_PhoneNumber::Swap(Player_PhoneNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Player_PhoneNumber::InternalSwap(Player_PhoneNumber* other) {
  number_.Swap(&other->number_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Player_PhoneNumber::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Player_PhoneNumber

// required bytes number = 1;
bool Player_PhoneNumber::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Player_PhoneNumber::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
void Player_PhoneNumber::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void Player_PhoneNumber::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_number();
}
const ::std::string& Player_PhoneNumber::number() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.PhoneNumber.number)
  return number_.GetNoArena();
}
void Player_PhoneNumber::set_number(const ::std::string& value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.Player.PhoneNumber.number)
}
#if LANG_CXX11
void Player_PhoneNumber::set_number(::std::string&& value) {
  set_has_number();
  number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.Player.PhoneNumber.number)
}
#endif
void Player_PhoneNumber::set_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.Player.PhoneNumber.number)
}
void Player_PhoneNumber::set_number(const void* value, size_t size) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.Player.PhoneNumber.number)
}
::std::string* Player_PhoneNumber::mutable_number() {
  set_has_number();
  // @@protoc_insertion_point(field_mutable:zhu.user.Player.PhoneNumber.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Player_PhoneNumber::release_number() {
  // @@protoc_insertion_point(field_release:zhu.user.Player.PhoneNumber.number)
  clear_has_number();
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Player_PhoneNumber::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    set_has_number();
  } else {
    clear_has_number();
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.Player.PhoneNumber.number)
}

// optional .zhu.user.Player.PhoneType type = 2 [default = HOME];
bool Player_PhoneNumber::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Player_PhoneNumber::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Player_PhoneNumber::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Player_PhoneNumber::clear_type() {
  type_ = 1;
  clear_has_type();
}
::zhu::user::Player_PhoneType Player_PhoneNumber::type() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.PhoneNumber.type)
  return static_cast< ::zhu::user::Player_PhoneType >(type_);
}
void Player_PhoneNumber::set_type(::zhu::user::Player_PhoneType value) {
  assert(::zhu::user::Player_PhoneType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.Player.PhoneNumber.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Player::kSocketFieldNumber;
const int Player::kIdFieldNumber;
const int Player::kAccountFieldNumber;
const int Player::kPasswordFieldNumber;
const int Player::kNameFieldNumber;
const int Player::kEmailFieldNumber;
const int Player::kSexFieldNumber;
const int Player::kPhonesFieldNumber;
const int Player::kStatusFieldNumber;
const int Player::kMoneyFieldNumber;
const int Player::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Player::Player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.user.Player)
}
Player::Player(const Player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      phones_(from.phones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&socket_) -
    reinterpret_cast<char*>(&id_) + sizeof(socket_));
  // @@protoc_insertion_point(copy_constructor:zhu.user.Player)
}

void Player::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&id_) + sizeof(money_));
  socket_ = -1;
}

Player::~Player() {
  // @@protoc_insertion_point(destructor:zhu.user.Player)
  SharedDtor();
}

void Player::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Player::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Player::descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Player& Player::default_instance() {
  protobuf_player_2eproto::InitDefaults();
  return *internal_default_instance();
}

Player* Player::New(::google::protobuf::Arena* arena) const {
  Player* n = new Player;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Player::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.user.Player)
  phones_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_email()) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_) + sizeof(status_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    money_ = 0;
    socket_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.user.Player)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 socket = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_socket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 id = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.user.Player.SexType sex = 7 [default = MALE];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::user::Player_SexType_IsValid(value)) {
            set_sex(static_cast< ::zhu::user::Player_SexType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zhu.user.Player.PhoneNumber phones = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_phones()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.user.UserStatus status = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::user::UserStatus_IsValid(value)) {
            set_status(static_cast< ::zhu::user::UserStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes desc = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.user.Player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.user.Player)
  return false;
#undef DO_
}

void Player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.user.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 socket = 1 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->socket(), output);
  }

  // required uint32 id = 2 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // required bytes account = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->account(), output);
  }

  // required bytes password = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->password(), output);
  }

  // required bytes name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->name(), output);
  }

  // optional bytes email = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->email(), output);
  }

  // optional .zhu.user.Player.SexType sex = 7 [default = MALE];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->sex(), output);
  }

  // repeated .zhu.user.Player.PhoneNumber phones = 8;
  for (unsigned int i = 0, n = this->phones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->phones(i), output);
  }

  // optional .zhu.user.UserStatus status = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->status(), output);
  }

  // optional int32 money = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->money(), output);
  }

  // optional bytes desc = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->desc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.user.Player)
}

::google::protobuf::uint8* Player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.user.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 socket = 1 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->socket(), target);
  }

  // required uint32 id = 2 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // required bytes account = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->account(), target);
  }

  // required bytes password = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->password(), target);
  }

  // required bytes name = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->name(), target);
  }

  // optional bytes email = 6;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->email(), target);
  }

  // optional .zhu.user.Player.SexType sex = 7 [default = MALE];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->sex(), target);
  }

  // repeated .zhu.user.Player.PhoneNumber phones = 8;
  for (unsigned int i = 0, n = this->phones_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->phones(i), deterministic, target);
  }

  // optional .zhu.user.UserStatus status = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->status(), target);
  }

  // optional int32 money = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->money(), target);
  }

  // optional bytes desc = 11;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->desc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.user.Player)
  return target;
}

size_t Player::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.user.Player)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_password()) {
    // required bytes password = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  if (has_name()) {
    // required bytes name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_id()) {
    // required uint32 id = 2 [default = 0];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_socket()) {
    // required int32 socket = 1 [default = -1];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socket());
  }

  return total_size;
}
size_t Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.user.Player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000227) ^ 0x00000227) == 0) {  // All required fields are present.
    // required bytes account = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required bytes password = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());

    // required bytes name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required uint32 id = 2 [default = 0];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required int32 socket = 1 [default = -1];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socket());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .zhu.user.Player.PhoneNumber phones = 8;
  {
    unsigned int count = this->phones_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->phones(i));
    }
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional bytes email = 6;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->email());
    }

    // optional bytes desc = 11;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional .zhu.user.Player.SexType sex = 7 [default = MALE];
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sex());
    }

    // optional .zhu.user.UserStatus status = 9;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  // optional int32 money = 10;
  if (has_money()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.user.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const Player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.user.Player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.user.Player)
    MergeFrom(*source);
  }
}

void Player::MergeFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.user.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  phones_.MergeFrom(from.phones_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000020u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000040u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000080u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000200u) {
      socket_ = from.socket_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.user.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Player::CopyFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.user.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Player::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000227) != 0x00000227) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->phones())) return false;
  return true;
}

void Player::Swap(Player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Player::InternalSwap(Player* other) {
  phones_.InternalSwap(&other->phones_);
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  name_.Swap(&other->name_);
  email_.Swap(&other->email_);
  desc_.Swap(&other->desc_);
  std::swap(id_, other->id_);
  std::swap(sex_, other->sex_);
  std::swap(status_, other->status_);
  std::swap(money_, other->money_);
  std::swap(socket_, other->socket_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Player::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Player

// required int32 socket = 1 [default = -1];
bool Player::has_socket() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Player::set_has_socket() {
  _has_bits_[0] |= 0x00000200u;
}
void Player::clear_has_socket() {
  _has_bits_[0] &= ~0x00000200u;
}
void Player::clear_socket() {
  socket_ = -1;
  clear_has_socket();
}
::google::protobuf::int32 Player::socket() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.socket)
  return socket_;
}
void Player::set_socket(::google::protobuf::int32 value) {
  set_has_socket();
  socket_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.Player.socket)
}

// required uint32 id = 2 [default = 0];
bool Player::has_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Player::set_has_id() {
  _has_bits_[0] |= 0x00000020u;
}
void Player::clear_has_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void Player::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 Player::id() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.id)
  return id_;
}
void Player::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.Player.id)
}

// required bytes account = 3;
bool Player::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Player::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void Player::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void Player::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& Player::account() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.account)
  return account_.GetNoArena();
}
void Player::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.Player.account)
}
#if LANG_CXX11
void Player::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.Player.account)
}
#endif
void Player::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.Player.account)
}
void Player::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.Player.account)
}
::std::string* Player::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.user.Player.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Player::release_account() {
  // @@protoc_insertion_point(field_release:zhu.user.Player.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Player::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.Player.account)
}

// required bytes password = 4;
bool Player::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Player::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void Player::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void Player::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& Player::password() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.password)
  return password_.GetNoArena();
}
void Player::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.Player.password)
}
#if LANG_CXX11
void Player::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.Player.password)
}
#endif
void Player::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.Player.password)
}
void Player::set_password(const void* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.Player.password)
}
::std::string* Player::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:zhu.user.Player.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Player::release_password() {
  // @@protoc_insertion_point(field_release:zhu.user.Player.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Player::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.Player.password)
}

// required bytes name = 5;
bool Player::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Player::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void Player::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void Player::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Player::name() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.name)
  return name_.GetNoArena();
}
void Player::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.Player.name)
}
#if LANG_CXX11
void Player::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.Player.name)
}
#endif
void Player::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.Player.name)
}
void Player::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.Player.name)
}
::std::string* Player::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:zhu.user.Player.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Player::release_name() {
  // @@protoc_insertion_point(field_release:zhu.user.Player.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Player::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.Player.name)
}

// optional bytes email = 6;
bool Player::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Player::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
void Player::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
void Player::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& Player::email() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.email)
  return email_.GetNoArena();
}
void Player::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.Player.email)
}
#if LANG_CXX11
void Player::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.Player.email)
}
#endif
void Player::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.Player.email)
}
void Player::set_email(const void* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.Player.email)
}
::std::string* Player::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:zhu.user.Player.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Player::release_email() {
  // @@protoc_insertion_point(field_release:zhu.user.Player.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Player::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.Player.email)
}

// optional .zhu.user.Player.SexType sex = 7 [default = MALE];
bool Player::has_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Player::set_has_sex() {
  _has_bits_[0] |= 0x00000040u;
}
void Player::clear_has_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
void Player::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
::zhu::user::Player_SexType Player::sex() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.sex)
  return static_cast< ::zhu::user::Player_SexType >(sex_);
}
void Player::set_sex(::zhu::user::Player_SexType value) {
  assert(::zhu::user::Player_SexType_IsValid(value));
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.Player.sex)
}

// repeated .zhu.user.Player.PhoneNumber phones = 8;
int Player::phones_size() const {
  return phones_.size();
}
void Player::clear_phones() {
  phones_.Clear();
}
const ::zhu::user::Player_PhoneNumber& Player::phones(int index) const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.phones)
  return phones_.Get(index);
}
::zhu::user::Player_PhoneNumber* Player::mutable_phones(int index) {
  // @@protoc_insertion_point(field_mutable:zhu.user.Player.phones)
  return phones_.Mutable(index);
}
::zhu::user::Player_PhoneNumber* Player::add_phones() {
  // @@protoc_insertion_point(field_add:zhu.user.Player.phones)
  return phones_.Add();
}
::google::protobuf::RepeatedPtrField< ::zhu::user::Player_PhoneNumber >*
Player::mutable_phones() {
  // @@protoc_insertion_point(field_mutable_list:zhu.user.Player.phones)
  return &phones_;
}
const ::google::protobuf::RepeatedPtrField< ::zhu::user::Player_PhoneNumber >&
Player::phones() const {
  // @@protoc_insertion_point(field_list:zhu.user.Player.phones)
  return phones_;
}

// optional .zhu.user.UserStatus status = 9;
bool Player::has_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Player::set_has_status() {
  _has_bits_[0] |= 0x00000080u;
}
void Player::clear_has_status() {
  _has_bits_[0] &= ~0x00000080u;
}
void Player::clear_status() {
  status_ = 0;
  clear_has_status();
}
::zhu::user::UserStatus Player::status() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.status)
  return static_cast< ::zhu::user::UserStatus >(status_);
}
void Player::set_status(::zhu::user::UserStatus value) {
  assert(::zhu::user::UserStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.Player.status)
}

// optional int32 money = 10;
bool Player::has_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Player::set_has_money() {
  _has_bits_[0] |= 0x00000100u;
}
void Player::clear_has_money() {
  _has_bits_[0] &= ~0x00000100u;
}
void Player::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 Player::money() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.money)
  return money_;
}
void Player::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.Player.money)
}

// optional bytes desc = 11;
bool Player::has_desc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Player::set_has_desc() {
  _has_bits_[0] |= 0x00000010u;
}
void Player::clear_has_desc() {
  _has_bits_[0] &= ~0x00000010u;
}
void Player::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& Player::desc() const {
  // @@protoc_insertion_point(field_get:zhu.user.Player.desc)
  return desc_.GetNoArena();
}
void Player::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.Player.desc)
}
#if LANG_CXX11
void Player::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.Player.desc)
}
#endif
void Player::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.Player.desc)
}
void Player::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.Player.desc)
}
::std::string* Player::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:zhu.user.Player.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Player::release_desc() {
  // @@protoc_insertion_point(field_release:zhu.user.Player.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Player::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.Player.desc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineOfflineNotify::kAccountFieldNumber;
const int OnlineOfflineNotify::kOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineOfflineNotify::OnlineOfflineNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.user.OnlineOfflineNotify)
}
OnlineOfflineNotify::OnlineOfflineNotify(const OnlineOfflineNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  online_ = from.online_;
  // @@protoc_insertion_point(copy_constructor:zhu.user.OnlineOfflineNotify)
}

void OnlineOfflineNotify::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_ = false;
}

OnlineOfflineNotify::~OnlineOfflineNotify() {
  // @@protoc_insertion_point(destructor:zhu.user.OnlineOfflineNotify)
  SharedDtor();
}

void OnlineOfflineNotify::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnlineOfflineNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlineOfflineNotify::descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlineOfflineNotify& OnlineOfflineNotify::default_instance() {
  protobuf_player_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnlineOfflineNotify* OnlineOfflineNotify::New(::google::protobuf::Arena* arena) const {
  OnlineOfflineNotify* n = new OnlineOfflineNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlineOfflineNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.user.OnlineOfflineNotify)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  online_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnlineOfflineNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.user.OnlineOfflineNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool online = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_online();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.user.OnlineOfflineNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.user.OnlineOfflineNotify)
  return false;
#undef DO_
}

void OnlineOfflineNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.user.OnlineOfflineNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // required bool online = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->online(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.user.OnlineOfflineNotify)
}

::google::protobuf::uint8* OnlineOfflineNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.user.OnlineOfflineNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // required bool online = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->online(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.user.OnlineOfflineNotify)
  return target;
}

size_t OnlineOfflineNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.user.OnlineOfflineNotify)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_online()) {
    // required bool online = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t OnlineOfflineNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.user.OnlineOfflineNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required bool online = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnlineOfflineNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.user.OnlineOfflineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineOfflineNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlineOfflineNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.user.OnlineOfflineNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.user.OnlineOfflineNotify)
    MergeFrom(*source);
  }
}

void OnlineOfflineNotify::MergeFrom(const OnlineOfflineNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.user.OnlineOfflineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      online_ = from.online_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OnlineOfflineNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.user.OnlineOfflineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineOfflineNotify::CopyFrom(const OnlineOfflineNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.user.OnlineOfflineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineOfflineNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void OnlineOfflineNotify::Swap(OnlineOfflineNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineOfflineNotify::InternalSwap(OnlineOfflineNotify* other) {
  account_.Swap(&other->account_);
  std::swap(online_, other->online_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnlineOfflineNotify::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnlineOfflineNotify

// required bytes account = 1;
bool OnlineOfflineNotify::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OnlineOfflineNotify::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void OnlineOfflineNotify::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void OnlineOfflineNotify::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& OnlineOfflineNotify::account() const {
  // @@protoc_insertion_point(field_get:zhu.user.OnlineOfflineNotify.account)
  return account_.GetNoArena();
}
void OnlineOfflineNotify::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.user.OnlineOfflineNotify.account)
}
#if LANG_CXX11
void OnlineOfflineNotify::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.user.OnlineOfflineNotify.account)
}
#endif
void OnlineOfflineNotify::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.user.OnlineOfflineNotify.account)
}
void OnlineOfflineNotify::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.user.OnlineOfflineNotify.account)
}
::std::string* OnlineOfflineNotify::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.user.OnlineOfflineNotify.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OnlineOfflineNotify::release_account() {
  // @@protoc_insertion_point(field_release:zhu.user.OnlineOfflineNotify.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OnlineOfflineNotify::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.user.OnlineOfflineNotify.account)
}

// required bool online = 3;
bool OnlineOfflineNotify::has_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OnlineOfflineNotify::set_has_online() {
  _has_bits_[0] |= 0x00000002u;
}
void OnlineOfflineNotify::clear_has_online() {
  _has_bits_[0] &= ~0x00000002u;
}
void OnlineOfflineNotify::clear_online() {
  online_ = false;
  clear_has_online();
}
bool OnlineOfflineNotify::online() const {
  // @@protoc_insertion_point(field_get:zhu.user.OnlineOfflineNotify.online)
  return online_;
}
void OnlineOfflineNotify::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:zhu.user.OnlineOfflineNotify.online)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace user
}  // namespace zhu

// @@protoc_insertion_point(global_scope)
