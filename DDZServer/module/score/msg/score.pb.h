// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: score.proto

#ifndef PROTOBUF_score_2eproto__INCLUDED
#define PROTOBUF_score_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace zhu {
namespace score {
class CurrentMultiple;
class CurrentMultipleDefaultTypeInternal;
extern CurrentMultipleDefaultTypeInternal _CurrentMultiple_default_instance_;
class Score;
class ScoreDefaultTypeInternal;
extern ScoreDefaultTypeInternal _Score_default_instance_;
class SettleScoreResp;
class SettleScoreRespDefaultTypeInternal;
extern SettleScoreRespDefaultTypeInternal _SettleScoreResp_default_instance_;
}  // namespace score
}  // namespace zhu

namespace zhu {
namespace score {

namespace protobuf_score_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_score_2eproto

enum ERROR_CODE {
  SUCCESS = 0,
  SAVE_ERROR = 1,
  USER_NOT_EXIT = 2,
  SERVER_ERROR = 3
};
bool ERROR_CODE_IsValid(int value);
const ERROR_CODE ERROR_CODE_MIN = SUCCESS;
const ERROR_CODE ERROR_CODE_MAX = SERVER_ERROR;
const int ERROR_CODE_ARRAYSIZE = ERROR_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERROR_CODE_descriptor();
inline const ::std::string& ERROR_CODE_Name(ERROR_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERROR_CODE_descriptor(), value);
}
inline bool ERROR_CODE_Parse(
    const ::std::string& name, ERROR_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERROR_CODE>(
    ERROR_CODE_descriptor(), name, value);
}
// ===================================================================

class Score : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zhu.score.Score) */ {
 public:
  Score();
  virtual ~Score();

  Score(const Score& from);

  inline Score& operator=(const Score& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Score& default_instance();

  static inline const Score* internal_default_instance() {
    return reinterpret_cast<const Score*>(
               &_Score_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Score* other);

  // implements Message ----------------------------------------------

  inline Score* New() const PROTOBUF_FINAL { return New(NULL); }

  Score* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Score& from);
  void MergeFrom(const Score& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Score* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1 [default = 0];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required float score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:zhu.score.Score)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_score();
  void clear_has_score();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  float score_;
  friend struct protobuf_score_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SettleScoreResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zhu.score.SettleScoreResp) */ {
 public:
  SettleScoreResp();
  virtual ~SettleScoreResp();

  SettleScoreResp(const SettleScoreResp& from);

  inline SettleScoreResp& operator=(const SettleScoreResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SettleScoreResp& default_instance();

  static inline const SettleScoreResp* internal_default_instance() {
    return reinterpret_cast<const SettleScoreResp*>(
               &_SettleScoreResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SettleScoreResp* other);

  // implements Message ----------------------------------------------

  inline SettleScoreResp* New() const PROTOBUF_FINAL { return New(NULL); }

  SettleScoreResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SettleScoreResp& from);
  void MergeFrom(const SettleScoreResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SettleScoreResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required .zhu.score.ERROR_CODE settleResult = 1;
  bool has_settleresult() const;
  void clear_settleresult();
  static const int kSettleResultFieldNumber = 1;
  ::zhu::score::ERROR_CODE settleresult() const;
  void set_settleresult(::zhu::score::ERROR_CODE value);

  // optional float currentScore = 3;
  bool has_currentscore() const;
  void clear_currentscore();
  static const int kCurrentScoreFieldNumber = 3;
  float currentscore() const;
  void set_currentscore(float value);

  // optional float totalScore = 4;
  bool has_totalscore() const;
  void clear_totalscore();
  static const int kTotalScoreFieldNumber = 4;
  float totalscore() const;
  void set_totalscore(float value);

  // optional int32 multiple = 5;
  bool has_multiple() const;
  void clear_multiple();
  static const int kMultipleFieldNumber = 5;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zhu.score.SettleScoreResp)
 private:
  void set_has_settleresult();
  void clear_has_settleresult();
  void set_has_desc();
  void clear_has_desc();
  void set_has_currentscore();
  void clear_has_currentscore();
  void set_has_totalscore();
  void clear_has_totalscore();
  void set_has_multiple();
  void clear_has_multiple();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  int settleresult_;
  float currentscore_;
  float totalscore_;
  ::google::protobuf::int32 multiple_;
  friend struct protobuf_score_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CurrentMultiple : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zhu.score.CurrentMultiple) */ {
 public:
  CurrentMultiple();
  virtual ~CurrentMultiple();

  CurrentMultiple(const CurrentMultiple& from);

  inline CurrentMultiple& operator=(const CurrentMultiple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurrentMultiple& default_instance();

  static inline const CurrentMultiple* internal_default_instance() {
    return reinterpret_cast<const CurrentMultiple*>(
               &_CurrentMultiple_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CurrentMultiple* other);

  // implements Message ----------------------------------------------

  inline CurrentMultiple* New() const PROTOBUF_FINAL { return New(NULL); }

  CurrentMultiple* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CurrentMultiple& from);
  void MergeFrom(const CurrentMultiple& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CurrentMultiple* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 multiple = 1;
  bool has_multiple() const;
  void clear_multiple();
  static const int kMultipleFieldNumber = 1;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zhu.score.CurrentMultiple)
 private:
  void set_has_multiple();
  void clear_has_multiple();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 multiple_;
  friend struct protobuf_score_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Score

// required uint32 uid = 1 [default = 0];
inline bool Score::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Score::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Score::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Score::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 Score::uid() const {
  // @@protoc_insertion_point(field_get:zhu.score.Score.uid)
  return uid_;
}
inline void Score::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:zhu.score.Score.uid)
}

// required float score = 2;
inline bool Score::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Score::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Score::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Score::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline float Score::score() const {
  // @@protoc_insertion_point(field_get:zhu.score.Score.score)
  return score_;
}
inline void Score::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:zhu.score.Score.score)
}

// -------------------------------------------------------------------

// SettleScoreResp

// required .zhu.score.ERROR_CODE settleResult = 1;
inline bool SettleScoreResp::has_settleresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SettleScoreResp::set_has_settleresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SettleScoreResp::clear_has_settleresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SettleScoreResp::clear_settleresult() {
  settleresult_ = 0;
  clear_has_settleresult();
}
inline ::zhu::score::ERROR_CODE SettleScoreResp::settleresult() const {
  // @@protoc_insertion_point(field_get:zhu.score.SettleScoreResp.settleResult)
  return static_cast< ::zhu::score::ERROR_CODE >(settleresult_);
}
inline void SettleScoreResp::set_settleresult(::zhu::score::ERROR_CODE value) {
  assert(::zhu::score::ERROR_CODE_IsValid(value));
  set_has_settleresult();
  settleresult_ = value;
  // @@protoc_insertion_point(field_set:zhu.score.SettleScoreResp.settleResult)
}

// optional bytes desc = 2;
inline bool SettleScoreResp::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SettleScoreResp::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SettleScoreResp::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SettleScoreResp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& SettleScoreResp::desc() const {
  // @@protoc_insertion_point(field_get:zhu.score.SettleScoreResp.desc)
  return desc_.GetNoArena();
}
inline void SettleScoreResp::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.score.SettleScoreResp.desc)
}
#if LANG_CXX11
inline void SettleScoreResp::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.score.SettleScoreResp.desc)
}
#endif
inline void SettleScoreResp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.score.SettleScoreResp.desc)
}
inline void SettleScoreResp::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.score.SettleScoreResp.desc)
}
inline ::std::string* SettleScoreResp::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:zhu.score.SettleScoreResp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SettleScoreResp::release_desc() {
  // @@protoc_insertion_point(field_release:zhu.score.SettleScoreResp.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SettleScoreResp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:zhu.score.SettleScoreResp.desc)
}

// optional float currentScore = 3;
inline bool SettleScoreResp::has_currentscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SettleScoreResp::set_has_currentscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SettleScoreResp::clear_has_currentscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SettleScoreResp::clear_currentscore() {
  currentscore_ = 0;
  clear_has_currentscore();
}
inline float SettleScoreResp::currentscore() const {
  // @@protoc_insertion_point(field_get:zhu.score.SettleScoreResp.currentScore)
  return currentscore_;
}
inline void SettleScoreResp::set_currentscore(float value) {
  set_has_currentscore();
  currentscore_ = value;
  // @@protoc_insertion_point(field_set:zhu.score.SettleScoreResp.currentScore)
}

// optional float totalScore = 4;
inline bool SettleScoreResp::has_totalscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SettleScoreResp::set_has_totalscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SettleScoreResp::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SettleScoreResp::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline float SettleScoreResp::totalscore() const {
  // @@protoc_insertion_point(field_get:zhu.score.SettleScoreResp.totalScore)
  return totalscore_;
}
inline void SettleScoreResp::set_totalscore(float value) {
  set_has_totalscore();
  totalscore_ = value;
  // @@protoc_insertion_point(field_set:zhu.score.SettleScoreResp.totalScore)
}

// optional int32 multiple = 5;
inline bool SettleScoreResp::has_multiple() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SettleScoreResp::set_has_multiple() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SettleScoreResp::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SettleScoreResp::clear_multiple() {
  multiple_ = 0;
  clear_has_multiple();
}
inline ::google::protobuf::int32 SettleScoreResp::multiple() const {
  // @@protoc_insertion_point(field_get:zhu.score.SettleScoreResp.multiple)
  return multiple_;
}
inline void SettleScoreResp::set_multiple(::google::protobuf::int32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:zhu.score.SettleScoreResp.multiple)
}

// -------------------------------------------------------------------

// CurrentMultiple

// optional int32 multiple = 1;
inline bool CurrentMultiple::has_multiple() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurrentMultiple::set_has_multiple() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurrentMultiple::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurrentMultiple::clear_multiple() {
  multiple_ = 0;
  clear_has_multiple();
}
inline ::google::protobuf::int32 CurrentMultiple::multiple() const {
  // @@protoc_insertion_point(field_get:zhu.score.CurrentMultiple.multiple)
  return multiple_;
}
inline void CurrentMultiple::set_multiple(::google::protobuf::int32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:zhu.score.CurrentMultiple.multiple)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace score
}  // namespace zhu

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zhu::score::ERROR_CODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zhu::score::ERROR_CODE>() {
  return ::zhu::score::ERROR_CODE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_score_2eproto__INCLUDED
