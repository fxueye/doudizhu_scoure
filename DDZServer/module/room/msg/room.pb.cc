// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "room.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zhu {
namespace room {
class SeatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Seat> {
} _Seat_default_instance_;
class RoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Room> {
} _Room_default_instance_;
class GetRoomReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetRoomReq> {
} _GetRoomReq_default_instance_;
class GetRoomRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetRoomResp> {
} _GetRoomResp_default_instance_;
class LeaveRoomReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LeaveRoomReq> {
} _LeaveRoomReq_default_instance_;
class LeaveRoomRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LeaveRoomResp> {
} _LeaveRoomResp_default_instance_;
class EnterRoomReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomReq> {
} _EnterRoomReq_default_instance_;
class EnterRoomRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomResp> {
} _EnterRoomResp_default_instance_;
class CreateRoomReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomReq> {
} _CreateRoomReq_default_instance_;
class CreateRoomRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomResp> {
} _CreateRoomResp_default_instance_;
class ReadyReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReadyReq> {
} _ReadyReq_default_instance_;
class ReadyRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReadyResp> {
} _ReadyResp_default_instance_;
class GameOverMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GameOverMsg> {
} _GameOverMsg_default_instance_;
class RoomUserCountChangeNotifyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoomUserCountChangeNotify> {
} _RoomUserCountChangeNotify_default_instance_;
class RoomGameStatuChangeNotifyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoomGameStatuChangeNotify> {
} _RoomGameStatuChangeNotify_default_instance_;

namespace protobuf_room_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Seat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Seat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Seat, statu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Seat, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Seat, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Seat, playeraccount_),
  3,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, usercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, seat1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, seat2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Room, seat3_),
  4,
  0,
  5,
  6,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomReq, account_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomResp, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomResp, room_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomReq, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomReq, roomid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomResp, leaveroomresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReq, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReq, roomid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, enterresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, roominfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, position_),
  2,
  1,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoomReq, account_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoomResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoomResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoomResp, createresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoomResp, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoomResp, createroom_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyReq, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyReq, ready_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyResp, readyresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyResp, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyResp, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyResp, ready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadyResp, desc_),
  2,
  0,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameOverMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameOverMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameOverMsg, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameOverMsg, winfirstaccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameOverMsg, winsecondaccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameOverMsg, losefirstaccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameOverMsg, losesecondaccount_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomUserCountChangeNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomUserCountChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomUserCountChangeNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomUserCountChangeNotify, count_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomGameStatuChangeNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomGameStatuChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomGameStatuChangeNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomGameStatuChangeNotify, start_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(Seat)},
  { 13, 25, sizeof(Room)},
  { 32, 38, sizeof(GetRoomReq)},
  { 39, 46, sizeof(GetRoomResp)},
  { 48, 55, sizeof(LeaveRoomReq)},
  { 57, 63, sizeof(LeaveRoomResp)},
  { 64, 71, sizeof(EnterRoomReq)},
  { 73, 82, sizeof(EnterRoomResp)},
  { 86, 92, sizeof(CreateRoomReq)},
  { 93, 101, sizeof(CreateRoomResp)},
  { 104, 112, sizeof(ReadyReq)},
  { 115, 125, sizeof(ReadyResp)},
  { 130, 140, sizeof(GameOverMsg)},
  { 145, 152, sizeof(RoomUserCountChangeNotify)},
  { 154, 161, sizeof(RoomGameStatuChangeNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Seat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Room_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRoomResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LeaveRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LeaveRoomResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterRoomResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRoomResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadyResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameOverMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoomUserCountChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoomGameStatuChangeNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "room.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

}  // namespace

void TableStruct::Shutdown() {
  _Seat_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Room_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GetRoomReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _GetRoomResp_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LeaveRoomReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LeaveRoomResp_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _EnterRoomReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _EnterRoomResp_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CreateRoomReq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CreateRoomResp_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _ReadyReq_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _ReadyResp_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _GameOverMsg_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _RoomUserCountChangeNotify_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _RoomGameStatuChangeNotify_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Seat_default_instance_.DefaultConstruct();
  _Room_default_instance_.DefaultConstruct();
  _GetRoomReq_default_instance_.DefaultConstruct();
  _GetRoomResp_default_instance_.DefaultConstruct();
  _LeaveRoomReq_default_instance_.DefaultConstruct();
  _LeaveRoomResp_default_instance_.DefaultConstruct();
  _EnterRoomReq_default_instance_.DefaultConstruct();
  _EnterRoomResp_default_instance_.DefaultConstruct();
  _CreateRoomReq_default_instance_.DefaultConstruct();
  _CreateRoomResp_default_instance_.DefaultConstruct();
  _ReadyReq_default_instance_.DefaultConstruct();
  _ReadyResp_default_instance_.DefaultConstruct();
  _GameOverMsg_default_instance_.DefaultConstruct();
  _RoomUserCountChangeNotify_default_instance_.DefaultConstruct();
  _RoomGameStatuChangeNotify_default_instance_.DefaultConstruct();
  _Room_default_instance_.get_mutable()->seat1_ = const_cast< ::zhu::room::Seat*>(
      ::zhu::room::Seat::internal_default_instance());
  _Room_default_instance_.get_mutable()->seat2_ = const_cast< ::zhu::room::Seat*>(
      ::zhu::room::Seat::internal_default_instance());
  _Room_default_instance_.get_mutable()->seat3_ = const_cast< ::zhu::room::Seat*>(
      ::zhu::room::Seat::internal_default_instance());
  _EnterRoomResp_default_instance_.get_mutable()->roominfo_ = const_cast< ::zhu::room::Room*>(
      ::zhu::room::Room::internal_default_instance());
  _CreateRoomResp_default_instance_.get_mutable()->createroom_ = const_cast< ::zhu::room::Room*>(
      ::zhu::room::Room::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\nroom.proto\022\010zhu.room\"\251\001\n\004Seat\0223\n\005statu"
      "\030\001 \002(\0162\031.zhu.room.Seat.SeatStatus:\tNO_PL"
      "AYER\022\020\n\010position\030\002 \002(\r\022\016\n\006socket\030\003 \001(\005\022\025"
      "\n\rplayerAccount\030\004 \001(\014\"3\n\nSeatStatus\022\013\n\007U"
      "NREADY\020\000\022\t\n\005READY\020\001\022\r\n\tNO_PLAYER\020\002\"\272\001\n\004R"
      "oom\022\n\n\002id\030\001 \002(\r\022\020\n\010roomName\030\002 \002(\014\022\021\n\tuse"
      "rCount\030\003 \002(\r\022$\n\006status\030\004 \001(\0162\024.zhu.room."
      "RoomStatus\022\035\n\005seat1\030\005 \001(\0132\016.zhu.room.Sea"
      "t\022\035\n\005seat2\030\006 \001(\0132\016.zhu.room.Seat\022\035\n\005seat"
      "3\030\007 \001(\0132\016.zhu.room.Seat\"\035\n\nGetRoomReq\022\017\n"
      "\007account\030\001 \002(\014\":\n\013GetRoomResp\022\r\n\005count\030\001"
      " \002(\r\022\034\n\004room\030\002 \003(\0132\016.zhu.room.Room\"/\n\014Le"
      "aveRoomReq\022\017\n\007account\030\001 \002(\014\022\016\n\006roomId\030\002 "
      "\002(\r\">\n\rLeaveRoomResp\022-\n\017leaveRoomResult\030"
      "\001 \002(\0162\024.zhu.room.ERROR_CODE\"/\n\014EnterRoom"
      "Req\022\017\n\007account\030\001 \002(\014\022\016\n\006roomId\030\002 \002(\r\"|\n\r"
      "EnterRoomResp\022)\n\013enterResult\030\001 \002(\0162\024.zhu"
      ".room.ERROR_CODE\022 \n\010roomInfo\030\002 \001(\0132\016.zhu"
      ".room.Room\022\014\n\004desc\030\003 \001(\014\022\020\n\010position\030\004 \001"
      "(\r\" \n\rCreateRoomReq\022\017\n\007account\030\001 \002(\014\"n\n\016"
      "CreateRoomResp\022*\n\014createResult\030\001 \002(\0162\024.z"
      "hu.room.ERROR_CODE\022\014\n\004desc\030\002 \001(\014\022\"\n\ncrea"
      "teRoom\030\003 \001(\0132\016.zhu.room.Room\":\n\010ReadyReq"
      "\022\017\n\007account\030\001 \002(\014\022\016\n\006roomid\030\002 \002(\r\022\r\n\005rea"
      "dy\030\003 \002(\010\"v\n\tReadyResp\022)\n\013readyResult\030\001 \002"
      "(\0162\024.zhu.room.ERROR_CODE\022\017\n\007account\030\002 \001("
      "\014\022\020\n\010position\030\003 \001(\r\022\r\n\005ready\030\004 \001(\010\022\014\n\004de"
      "sc\030\005 \001(\014\"\205\001\n\013GameOverMsg\022\016\n\006roomid\030\001 \002(\r"
      "\022\027\n\017winFirstAccount\030\002 \001(\014\022\030\n\020winSecondAc"
      "count\030\003 \001(\014\022\030\n\020loseFirstAccount\030\004 \001(\014\022\031\n"
      "\021loseSecondAccount\030\005 \001(\014\"6\n\031RoomUserCoun"
      "tChangeNotify\022\n\n\002id\030\001 \002(\r\022\r\n\005count\030\002 \002(\r"
      "\"6\n\031RoomGameStatuChangeNotify\022\n\n\002id\030\001 \002("
      "\r\022\r\n\005start\030\002 \002(\010*9\n\nRoomStatus\022\010\n\004WAIT\020\000"
      "\022\014\n\010DESTORYE\020\001\022\t\n\005START\020\002\022\010\n\004FULL\020\003*\266\001\n\n"
      "ERROR_CODE\022\013\n\007SUCCESS\020\000\022\022\n\016ROOM_NOT_EXIS"
      "T\020\001\022\030\n\024ROOM_USER_FULL_ERROR\020\002\022\025\n\021CREATE_"
      "ROOM_ERROR\020\003\022\026\n\022PLAYER_NOT_IN_ROOM\020\004\022\026\n\022"
      "PLAYER_HAS_IN_ROOM\020\005\022\024\n\020PLAYER_HAS_READY"
      "\020\006\022\020\n\014SERVER_ERROR\020\007"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1580);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "room.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_room_2eproto

const ::google::protobuf::EnumDescriptor* Seat_SeatStatus_descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_enum_descriptors[0];
}
bool Seat_SeatStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Seat_SeatStatus Seat::UNREADY;
const Seat_SeatStatus Seat::READY;
const Seat_SeatStatus Seat::NO_PLAYER;
const Seat_SeatStatus Seat::SeatStatus_MIN;
const Seat_SeatStatus Seat::SeatStatus_MAX;
const int Seat::SeatStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RoomStatus_descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_enum_descriptors[1];
}
bool RoomStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ERROR_CODE_descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_enum_descriptors[2];
}
bool ERROR_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Seat::kStatuFieldNumber;
const int Seat::kPositionFieldNumber;
const int Seat::kSocketFieldNumber;
const int Seat::kPlayerAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Seat::Seat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.Seat)
}
Seat::Seat(const Seat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playeraccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playeraccount()) {
    playeraccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playeraccount_);
  }
  ::memcpy(&position_, &from.position_,
    reinterpret_cast<char*>(&statu_) -
    reinterpret_cast<char*>(&position_) + sizeof(statu_));
  // @@protoc_insertion_point(copy_constructor:zhu.room.Seat)
}

void Seat::SharedCtor() {
  _cached_size_ = 0;
  playeraccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, reinterpret_cast<char*>(&socket_) -
    reinterpret_cast<char*>(&position_) + sizeof(socket_));
  statu_ = 2;
}

Seat::~Seat() {
  // @@protoc_insertion_point(destructor:zhu.room.Seat)
  SharedDtor();
}

void Seat::SharedDtor() {
  playeraccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Seat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Seat::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Seat& Seat::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

Seat* Seat::New(::google::protobuf::Arena* arena) const {
  Seat* n = new Seat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Seat::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.Seat)
  if (has_playeraccount()) {
    GOOGLE_DCHECK(!playeraccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*playeraccount_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&position_, 0, reinterpret_cast<char*>(&socket_) -
      reinterpret_cast<char*>(&position_) + sizeof(socket_));
    statu_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Seat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.Seat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .zhu.room.Seat.SeatStatus statu = 1 [default = NO_PLAYER];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::room::Seat_SeatStatus_IsValid(value)) {
            set_statu(static_cast< ::zhu::room::Seat_SeatStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 socket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_socket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes playerAccount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playeraccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.Seat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.Seat)
  return false;
#undef DO_
}

void Seat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.Seat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.Seat.SeatStatus statu = 1 [default = NO_PLAYER];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->statu(), output);
  }

  // required uint32 position = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->position(), output);
  }

  // optional int32 socket = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->socket(), output);
  }

  // optional bytes playerAccount = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->playeraccount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.Seat)
}

::google::protobuf::uint8* Seat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.Seat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.Seat.SeatStatus statu = 1 [default = NO_PLAYER];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->statu(), target);
  }

  // required uint32 position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->position(), target);
  }

  // optional int32 socket = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->socket(), target);
  }

  // optional bytes playerAccount = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->playeraccount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.Seat)
  return target;
}

size_t Seat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.room.Seat)
  size_t total_size = 0;

  if (has_position()) {
    // required uint32 position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->position());
  }

  if (has_statu()) {
    // required .zhu.room.Seat.SeatStatus statu = 1 [default = NO_PLAYER];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->statu());
  }

  return total_size;
}
size_t Seat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.Seat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000a) ^ 0x0000000a) == 0) {  // All required fields are present.
    // required uint32 position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->position());

    // required .zhu.room.Seat.SeatStatus statu = 1 [default = NO_PLAYER];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->statu());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes playerAccount = 4;
  if (has_playeraccount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playeraccount());
  }

  // optional int32 socket = 3;
  if (has_socket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Seat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.Seat)
  GOOGLE_DCHECK_NE(&from, this);
  const Seat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Seat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.Seat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.Seat)
    MergeFrom(*source);
  }
}

void Seat::MergeFrom(const Seat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.Seat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playeraccount();
      playeraccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playeraccount_);
    }
    if (cached_has_bits & 0x00000002u) {
      position_ = from.position_;
    }
    if (cached_has_bits & 0x00000004u) {
      socket_ = from.socket_;
    }
    if (cached_has_bits & 0x00000008u) {
      statu_ = from.statu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Seat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.Seat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Seat::CopyFrom(const Seat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.Seat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Seat::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000a) != 0x0000000a) return false;
  return true;
}

void Seat::Swap(Seat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Seat::InternalSwap(Seat* other) {
  playeraccount_.Swap(&other->playeraccount_);
  std::swap(position_, other->position_);
  std::swap(socket_, other->socket_);
  std::swap(statu_, other->statu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Seat::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Seat

// required .zhu.room.Seat.SeatStatus statu = 1 [default = NO_PLAYER];
bool Seat::has_statu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Seat::set_has_statu() {
  _has_bits_[0] |= 0x00000008u;
}
void Seat::clear_has_statu() {
  _has_bits_[0] &= ~0x00000008u;
}
void Seat::clear_statu() {
  statu_ = 2;
  clear_has_statu();
}
::zhu::room::Seat_SeatStatus Seat::statu() const {
  // @@protoc_insertion_point(field_get:zhu.room.Seat.statu)
  return static_cast< ::zhu::room::Seat_SeatStatus >(statu_);
}
void Seat::set_statu(::zhu::room::Seat_SeatStatus value) {
  assert(::zhu::room::Seat_SeatStatus_IsValid(value));
  set_has_statu();
  statu_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.Seat.statu)
}

// required uint32 position = 2;
bool Seat::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Seat::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
void Seat::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
void Seat::clear_position() {
  position_ = 0u;
  clear_has_position();
}
::google::protobuf::uint32 Seat::position() const {
  // @@protoc_insertion_point(field_get:zhu.room.Seat.position)
  return position_;
}
void Seat::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.Seat.position)
}

// optional int32 socket = 3;
bool Seat::has_socket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Seat::set_has_socket() {
  _has_bits_[0] |= 0x00000004u;
}
void Seat::clear_has_socket() {
  _has_bits_[0] &= ~0x00000004u;
}
void Seat::clear_socket() {
  socket_ = 0;
  clear_has_socket();
}
::google::protobuf::int32 Seat::socket() const {
  // @@protoc_insertion_point(field_get:zhu.room.Seat.socket)
  return socket_;
}
void Seat::set_socket(::google::protobuf::int32 value) {
  set_has_socket();
  socket_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.Seat.socket)
}

// optional bytes playerAccount = 4;
bool Seat::has_playeraccount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Seat::set_has_playeraccount() {
  _has_bits_[0] |= 0x00000001u;
}
void Seat::clear_has_playeraccount() {
  _has_bits_[0] &= ~0x00000001u;
}
void Seat::clear_playeraccount() {
  playeraccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playeraccount();
}
const ::std::string& Seat::playeraccount() const {
  // @@protoc_insertion_point(field_get:zhu.room.Seat.playerAccount)
  return playeraccount_.GetNoArena();
}
void Seat::set_playeraccount(const ::std::string& value) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.Seat.playerAccount)
}
#if LANG_CXX11
void Seat::set_playeraccount(::std::string&& value) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.Seat.playerAccount)
}
#endif
void Seat::set_playeraccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.Seat.playerAccount)
}
void Seat::set_playeraccount(const void* value, size_t size) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.Seat.playerAccount)
}
::std::string* Seat::mutable_playeraccount() {
  set_has_playeraccount();
  // @@protoc_insertion_point(field_mutable:zhu.room.Seat.playerAccount)
  return playeraccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Seat::release_playeraccount() {
  // @@protoc_insertion_point(field_release:zhu.room.Seat.playerAccount)
  clear_has_playeraccount();
  return playeraccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Seat::set_allocated_playeraccount(::std::string* playeraccount) {
  if (playeraccount != NULL) {
    set_has_playeraccount();
  } else {
    clear_has_playeraccount();
  }
  playeraccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playeraccount);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.Seat.playerAccount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Room::kIdFieldNumber;
const int Room::kRoomNameFieldNumber;
const int Room::kUserCountFieldNumber;
const int Room::kStatusFieldNumber;
const int Room::kSeat1FieldNumber;
const int Room::kSeat2FieldNumber;
const int Room::kSeat3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Room::Room()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.Room)
}
Room::Room(const Room& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.has_seat1()) {
    seat1_ = new ::zhu::room::Seat(*from.seat1_);
  } else {
    seat1_ = NULL;
  }
  if (from.has_seat2()) {
    seat2_ = new ::zhu::room::Seat(*from.seat2_);
  } else {
    seat2_ = NULL;
  }
  if (from.has_seat3()) {
    seat3_ = new ::zhu::room::Seat(*from.seat3_);
  } else {
    seat3_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:zhu.room.Room)
}

void Room::SharedCtor() {
  _cached_size_ = 0;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seat1_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&seat1_) + sizeof(status_));
}

Room::~Room() {
  // @@protoc_insertion_point(destructor:zhu.room.Room)
  SharedDtor();
}

void Room::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete seat1_;
  }
  if (this != internal_default_instance()) {
    delete seat2_;
  }
  if (this != internal_default_instance()) {
    delete seat3_;
  }
}

void Room::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Room::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Room& Room::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

Room* Room::New(::google::protobuf::Arena* arena) const {
  Room* n = new Room;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.Room)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_roomname()) {
      GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*roomname_.UnsafeRawStringPointer())->clear();
    }
    if (has_seat1()) {
      GOOGLE_DCHECK(seat1_ != NULL);
      seat1_->::zhu::room::Seat::Clear();
    }
    if (has_seat2()) {
      GOOGLE_DCHECK(seat2_ != NULL);
      seat2_->::zhu::room::Seat::Clear();
    }
    if (has_seat3()) {
      GOOGLE_DCHECK(seat3_ != NULL);
      seat3_->::zhu::room::Seat::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.Room)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes roomName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_roomname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 userCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_usercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.room.RoomStatus status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::room::RoomStatus_IsValid(value)) {
            set_status(static_cast< ::zhu::room::RoomStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.room.Seat seat1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seat1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.room.Seat seat2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seat2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.room.Seat seat3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seat3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.Room)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.Room)
  return false;
#undef DO_
}

void Room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.Room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required bytes roomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->roomname(), output);
  }

  // required uint32 userCount = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->usercount(), output);
  }

  // optional .zhu.room.RoomStatus status = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // optional .zhu.room.Seat seat1 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->seat1_, output);
  }

  // optional .zhu.room.Seat seat2 = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->seat2_, output);
  }

  // optional .zhu.room.Seat seat3 = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->seat3_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.Room)
}

::google::protobuf::uint8* Room::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.Room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required bytes roomName = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->roomname(), target);
  }

  // required uint32 userCount = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->usercount(), target);
  }

  // optional .zhu.room.RoomStatus status = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // optional .zhu.room.Seat seat1 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->seat1_, deterministic, target);
  }

  // optional .zhu.room.Seat seat2 = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->seat2_, deterministic, target);
  }

  // optional .zhu.room.Seat seat3 = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->seat3_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.Room)
  return target;
}

size_t Room::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.room.Room)
  size_t total_size = 0;

  if (has_roomname()) {
    // required bytes roomName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->roomname());
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_usercount()) {
    // required uint32 userCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usercount());
  }

  return total_size;
}
size_t Room::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.Room)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000031) ^ 0x00000031) == 0) {  // All required fields are present.
    // required bytes roomName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->roomname());

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 userCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional .zhu.room.Seat seat1 = 5;
    if (has_seat1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->seat1_);
    }

    // optional .zhu.room.Seat seat2 = 6;
    if (has_seat2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->seat2_);
    }

    // optional .zhu.room.Seat seat3 = 7;
    if (has_seat3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->seat3_);
    }

  }
  // optional .zhu.room.RoomStatus status = 4;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Room::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.Room)
  GOOGLE_DCHECK_NE(&from, this);
  const Room* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Room>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.Room)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.Room)
    MergeFrom(*source);
  }
}

void Room::MergeFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.Room)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_seat1()->::zhu::room::Seat::MergeFrom(from.seat1());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_seat2()->::zhu::room::Seat::MergeFrom(from.seat2());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_seat3()->::zhu::room::Seat::MergeFrom(from.seat3());
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000020u) {
      usercount_ = from.usercount_;
    }
    if (cached_has_bits & 0x00000040u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Room::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Room::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000031) != 0x00000031) return false;
  if (has_seat1()) {
    if (!this->seat1_->IsInitialized()) return false;
  }
  if (has_seat2()) {
    if (!this->seat2_->IsInitialized()) return false;
  }
  if (has_seat3()) {
    if (!this->seat3_->IsInitialized()) return false;
  }
  return true;
}

void Room::Swap(Room* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Room::InternalSwap(Room* other) {
  roomname_.Swap(&other->roomname_);
  std::swap(seat1_, other->seat1_);
  std::swap(seat2_, other->seat2_);
  std::swap(seat3_, other->seat3_);
  std::swap(id_, other->id_);
  std::swap(usercount_, other->usercount_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Room::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Room

// required uint32 id = 1;
bool Room::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Room::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
void Room::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void Room::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 Room::id() const {
  // @@protoc_insertion_point(field_get:zhu.room.Room.id)
  return id_;
}
void Room::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.Room.id)
}

// required bytes roomName = 2;
bool Room::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Room::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
void Room::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
void Room::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
const ::std::string& Room::roomname() const {
  // @@protoc_insertion_point(field_get:zhu.room.Room.roomName)
  return roomname_.GetNoArena();
}
void Room::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.Room.roomName)
}
#if LANG_CXX11
void Room::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.Room.roomName)
}
#endif
void Room::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.Room.roomName)
}
void Room::set_roomname(const void* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.Room.roomName)
}
::std::string* Room::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:zhu.room.Room.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Room::release_roomname() {
  // @@protoc_insertion_point(field_release:zhu.room.Room.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Room::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.Room.roomName)
}

// required uint32 userCount = 3;
bool Room::has_usercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Room::set_has_usercount() {
  _has_bits_[0] |= 0x00000020u;
}
void Room::clear_has_usercount() {
  _has_bits_[0] &= ~0x00000020u;
}
void Room::clear_usercount() {
  usercount_ = 0u;
  clear_has_usercount();
}
::google::protobuf::uint32 Room::usercount() const {
  // @@protoc_insertion_point(field_get:zhu.room.Room.userCount)
  return usercount_;
}
void Room::set_usercount(::google::protobuf::uint32 value) {
  set_has_usercount();
  usercount_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.Room.userCount)
}

// optional .zhu.room.RoomStatus status = 4;
bool Room::has_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Room::set_has_status() {
  _has_bits_[0] |= 0x00000040u;
}
void Room::clear_has_status() {
  _has_bits_[0] &= ~0x00000040u;
}
void Room::clear_status() {
  status_ = 0;
  clear_has_status();
}
::zhu::room::RoomStatus Room::status() const {
  // @@protoc_insertion_point(field_get:zhu.room.Room.status)
  return static_cast< ::zhu::room::RoomStatus >(status_);
}
void Room::set_status(::zhu::room::RoomStatus value) {
  assert(::zhu::room::RoomStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.Room.status)
}

// optional .zhu.room.Seat seat1 = 5;
bool Room::has_seat1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Room::set_has_seat1() {
  _has_bits_[0] |= 0x00000002u;
}
void Room::clear_has_seat1() {
  _has_bits_[0] &= ~0x00000002u;
}
void Room::clear_seat1() {
  if (seat1_ != NULL) seat1_->::zhu::room::Seat::Clear();
  clear_has_seat1();
}
const ::zhu::room::Seat& Room::seat1() const {
  // @@protoc_insertion_point(field_get:zhu.room.Room.seat1)
  return seat1_ != NULL ? *seat1_
                         : *::zhu::room::Seat::internal_default_instance();
}
::zhu::room::Seat* Room::mutable_seat1() {
  set_has_seat1();
  if (seat1_ == NULL) {
    seat1_ = new ::zhu::room::Seat;
  }
  // @@protoc_insertion_point(field_mutable:zhu.room.Room.seat1)
  return seat1_;
}
::zhu::room::Seat* Room::release_seat1() {
  // @@protoc_insertion_point(field_release:zhu.room.Room.seat1)
  clear_has_seat1();
  ::zhu::room::Seat* temp = seat1_;
  seat1_ = NULL;
  return temp;
}
void Room::set_allocated_seat1(::zhu::room::Seat* seat1) {
  delete seat1_;
  seat1_ = seat1;
  if (seat1) {
    set_has_seat1();
  } else {
    clear_has_seat1();
  }
  // @@protoc_insertion_point(field_set_allocated:zhu.room.Room.seat1)
}

// optional .zhu.room.Seat seat2 = 6;
bool Room::has_seat2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Room::set_has_seat2() {
  _has_bits_[0] |= 0x00000004u;
}
void Room::clear_has_seat2() {
  _has_bits_[0] &= ~0x00000004u;
}
void Room::clear_seat2() {
  if (seat2_ != NULL) seat2_->::zhu::room::Seat::Clear();
  clear_has_seat2();
}
const ::zhu::room::Seat& Room::seat2() const {
  // @@protoc_insertion_point(field_get:zhu.room.Room.seat2)
  return seat2_ != NULL ? *seat2_
                         : *::zhu::room::Seat::internal_default_instance();
}
::zhu::room::Seat* Room::mutable_seat2() {
  set_has_seat2();
  if (seat2_ == NULL) {
    seat2_ = new ::zhu::room::Seat;
  }
  // @@protoc_insertion_point(field_mutable:zhu.room.Room.seat2)
  return seat2_;
}
::zhu::room::Seat* Room::release_seat2() {
  // @@protoc_insertion_point(field_release:zhu.room.Room.seat2)
  clear_has_seat2();
  ::zhu::room::Seat* temp = seat2_;
  seat2_ = NULL;
  return temp;
}
void Room::set_allocated_seat2(::zhu::room::Seat* seat2) {
  delete seat2_;
  seat2_ = seat2;
  if (seat2) {
    set_has_seat2();
  } else {
    clear_has_seat2();
  }
  // @@protoc_insertion_point(field_set_allocated:zhu.room.Room.seat2)
}

// optional .zhu.room.Seat seat3 = 7;
bool Room::has_seat3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Room::set_has_seat3() {
  _has_bits_[0] |= 0x00000008u;
}
void Room::clear_has_seat3() {
  _has_bits_[0] &= ~0x00000008u;
}
void Room::clear_seat3() {
  if (seat3_ != NULL) seat3_->::zhu::room::Seat::Clear();
  clear_has_seat3();
}
const ::zhu::room::Seat& Room::seat3() const {
  // @@protoc_insertion_point(field_get:zhu.room.Room.seat3)
  return seat3_ != NULL ? *seat3_
                         : *::zhu::room::Seat::internal_default_instance();
}
::zhu::room::Seat* Room::mutable_seat3() {
  set_has_seat3();
  if (seat3_ == NULL) {
    seat3_ = new ::zhu::room::Seat;
  }
  // @@protoc_insertion_point(field_mutable:zhu.room.Room.seat3)
  return seat3_;
}
::zhu::room::Seat* Room::release_seat3() {
  // @@protoc_insertion_point(field_release:zhu.room.Room.seat3)
  clear_has_seat3();
  ::zhu::room::Seat* temp = seat3_;
  seat3_ = NULL;
  return temp;
}
void Room::set_allocated_seat3(::zhu::room::Seat* seat3) {
  delete seat3_;
  seat3_ = seat3;
  if (seat3) {
    set_has_seat3();
  } else {
    clear_has_seat3();
  }
  // @@protoc_insertion_point(field_set_allocated:zhu.room.Room.seat3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRoomReq::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRoomReq::GetRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.GetRoomReq)
}
GetRoomReq::GetRoomReq(const GetRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  // @@protoc_insertion_point(copy_constructor:zhu.room.GetRoomReq)
}

void GetRoomReq::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRoomReq::~GetRoomReq() {
  // @@protoc_insertion_point(destructor:zhu.room.GetRoomReq)
  SharedDtor();
}

void GetRoomReq::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRoomReq::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRoomReq& GetRoomReq::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRoomReq* GetRoomReq::New(::google::protobuf::Arena* arena) const {
  GetRoomReq* n = new GetRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.GetRoomReq)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.GetRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.GetRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.GetRoomReq)
  return false;
#undef DO_
}

void GetRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.GetRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.GetRoomReq)
}

::google::protobuf::uint8* GetRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.GetRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.GetRoomReq)
  return target;
}

size_t GetRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.GetRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required bytes account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.GetRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.GetRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.GetRoomReq)
    MergeFrom(*source);
  }
}

void GetRoomReq::MergeFrom(const GetRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.GetRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account()) {
    set_has_account();
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
}

void GetRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.GetRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoomReq::CopyFrom(const GetRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.GetRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetRoomReq::Swap(GetRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRoomReq::InternalSwap(GetRoomReq* other) {
  account_.Swap(&other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRoomReq::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRoomReq

// required bytes account = 1;
bool GetRoomReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRoomReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRoomReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRoomReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& GetRoomReq::account() const {
  // @@protoc_insertion_point(field_get:zhu.room.GetRoomReq.account)
  return account_.GetNoArena();
}
void GetRoomReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.GetRoomReq.account)
}
#if LANG_CXX11
void GetRoomReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.GetRoomReq.account)
}
#endif
void GetRoomReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.GetRoomReq.account)
}
void GetRoomReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.GetRoomReq.account)
}
::std::string* GetRoomReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.room.GetRoomReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRoomReq::release_account() {
  // @@protoc_insertion_point(field_release:zhu.room.GetRoomReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRoomReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.GetRoomReq.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRoomResp::kCountFieldNumber;
const int GetRoomResp::kRoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRoomResp::GetRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.GetRoomResp)
}
GetRoomResp::GetRoomResp(const GetRoomResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      room_(from.room_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:zhu.room.GetRoomResp)
}

void GetRoomResp::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0u;
}

GetRoomResp::~GetRoomResp() {
  // @@protoc_insertion_point(destructor:zhu.room.GetRoomResp)
  SharedDtor();
}

void GetRoomResp::SharedDtor() {
}

void GetRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRoomResp::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRoomResp& GetRoomResp::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRoomResp* GetRoomResp::New(::google::protobuf::Arena* arena) const {
  GetRoomResp* n = new GetRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.GetRoomResp)
  room_.Clear();
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.GetRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zhu.room.Room room = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_room()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.GetRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.GetRoomResp)
  return false;
#undef DO_
}

void GetRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.GetRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 count = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .zhu.room.Room room = 2;
  for (unsigned int i = 0, n = this->room_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->room(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.GetRoomResp)
}

::google::protobuf::uint8* GetRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.GetRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .zhu.room.Room room = 2;
  for (unsigned int i = 0, n = this->room_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->room(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.GetRoomResp)
  return target;
}

size_t GetRoomResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.GetRoomResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 count = 1;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }
  // repeated .zhu.room.Room room = 2;
  {
    unsigned int count = this->room_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->room(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.GetRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRoomResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.GetRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.GetRoomResp)
    MergeFrom(*source);
  }
}

void GetRoomResp::MergeFrom(const GetRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.GetRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  room_.MergeFrom(from.room_);
  if (from.has_count()) {
    set_count(from.count());
  }
}

void GetRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.GetRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoomResp::CopyFrom(const GetRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.GetRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoomResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->room())) return false;
  return true;
}

void GetRoomResp::Swap(GetRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRoomResp::InternalSwap(GetRoomResp* other) {
  room_.InternalSwap(&other->room_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRoomResp::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRoomResp

// required uint32 count = 1;
bool GetRoomResp::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRoomResp::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRoomResp::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRoomResp::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 GetRoomResp::count() const {
  // @@protoc_insertion_point(field_get:zhu.room.GetRoomResp.count)
  return count_;
}
void GetRoomResp::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.GetRoomResp.count)
}

// repeated .zhu.room.Room room = 2;
int GetRoomResp::room_size() const {
  return room_.size();
}
void GetRoomResp::clear_room() {
  room_.Clear();
}
const ::zhu::room::Room& GetRoomResp::room(int index) const {
  // @@protoc_insertion_point(field_get:zhu.room.GetRoomResp.room)
  return room_.Get(index);
}
::zhu::room::Room* GetRoomResp::mutable_room(int index) {
  // @@protoc_insertion_point(field_mutable:zhu.room.GetRoomResp.room)
  return room_.Mutable(index);
}
::zhu::room::Room* GetRoomResp::add_room() {
  // @@protoc_insertion_point(field_add:zhu.room.GetRoomResp.room)
  return room_.Add();
}
::google::protobuf::RepeatedPtrField< ::zhu::room::Room >*
GetRoomResp::mutable_room() {
  // @@protoc_insertion_point(field_mutable_list:zhu.room.GetRoomResp.room)
  return &room_;
}
const ::google::protobuf::RepeatedPtrField< ::zhu::room::Room >&
GetRoomResp::room() const {
  // @@protoc_insertion_point(field_list:zhu.room.GetRoomResp.room)
  return room_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveRoomReq::kAccountFieldNumber;
const int LeaveRoomReq::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveRoomReq::LeaveRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.LeaveRoomReq)
}
LeaveRoomReq::LeaveRoomReq(const LeaveRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:zhu.room.LeaveRoomReq)
}

void LeaveRoomReq::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_ = 0u;
}

LeaveRoomReq::~LeaveRoomReq() {
  // @@protoc_insertion_point(destructor:zhu.room.LeaveRoomReq)
  SharedDtor();
}

void LeaveRoomReq::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LeaveRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveRoomReq::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveRoomReq& LeaveRoomReq::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

LeaveRoomReq* LeaveRoomReq::New(::google::protobuf::Arena* arena) const {
  LeaveRoomReq* n = new LeaveRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.LeaveRoomReq)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  roomid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LeaveRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.LeaveRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 roomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.LeaveRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.LeaveRoomReq)
  return false;
#undef DO_
}

void LeaveRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.LeaveRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // required uint32 roomId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.LeaveRoomReq)
}

::google::protobuf::uint8* LeaveRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.LeaveRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // required uint32 roomId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.LeaveRoomReq)
  return target;
}

size_t LeaveRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.room.LeaveRoomReq)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_roomid()) {
    // required uint32 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  return total_size;
}
size_t LeaveRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.LeaveRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required uint32 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.LeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.LeaveRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.LeaveRoomReq)
    MergeFrom(*source);
  }
}

void LeaveRoomReq::MergeFrom(const LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.LeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LeaveRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveRoomReq::CopyFrom(const LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LeaveRoomReq::Swap(LeaveRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveRoomReq::InternalSwap(LeaveRoomReq* other) {
  account_.Swap(&other->account_);
  std::swap(roomid_, other->roomid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveRoomReq::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveRoomReq

// required bytes account = 1;
bool LeaveRoomReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LeaveRoomReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void LeaveRoomReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void LeaveRoomReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& LeaveRoomReq::account() const {
  // @@protoc_insertion_point(field_get:zhu.room.LeaveRoomReq.account)
  return account_.GetNoArena();
}
void LeaveRoomReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.LeaveRoomReq.account)
}
#if LANG_CXX11
void LeaveRoomReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.LeaveRoomReq.account)
}
#endif
void LeaveRoomReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.LeaveRoomReq.account)
}
void LeaveRoomReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.LeaveRoomReq.account)
}
::std::string* LeaveRoomReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.room.LeaveRoomReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LeaveRoomReq::release_account() {
  // @@protoc_insertion_point(field_release:zhu.room.LeaveRoomReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LeaveRoomReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.LeaveRoomReq.account)
}

// required uint32 roomId = 2;
bool LeaveRoomReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LeaveRoomReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
void LeaveRoomReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
void LeaveRoomReq::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
::google::protobuf::uint32 LeaveRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:zhu.room.LeaveRoomReq.roomId)
  return roomid_;
}
void LeaveRoomReq::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.LeaveRoomReq.roomId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveRoomResp::kLeaveRoomResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveRoomResp::LeaveRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.LeaveRoomResp)
}
LeaveRoomResp::LeaveRoomResp(const LeaveRoomResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leaveroomresult_ = from.leaveroomresult_;
  // @@protoc_insertion_point(copy_constructor:zhu.room.LeaveRoomResp)
}

void LeaveRoomResp::SharedCtor() {
  _cached_size_ = 0;
  leaveroomresult_ = 0;
}

LeaveRoomResp::~LeaveRoomResp() {
  // @@protoc_insertion_point(destructor:zhu.room.LeaveRoomResp)
  SharedDtor();
}

void LeaveRoomResp::SharedDtor() {
}

void LeaveRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveRoomResp::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveRoomResp& LeaveRoomResp::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

LeaveRoomResp* LeaveRoomResp::New(::google::protobuf::Arena* arena) const {
  LeaveRoomResp* n = new LeaveRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.LeaveRoomResp)
  leaveroomresult_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LeaveRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.LeaveRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .zhu.room.ERROR_CODE leaveRoomResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::room::ERROR_CODE_IsValid(value)) {
            set_leaveroomresult(static_cast< ::zhu::room::ERROR_CODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.LeaveRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.LeaveRoomResp)
  return false;
#undef DO_
}

void LeaveRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.LeaveRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.ERROR_CODE leaveRoomResult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->leaveroomresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.LeaveRoomResp)
}

::google::protobuf::uint8* LeaveRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.LeaveRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.ERROR_CODE leaveRoomResult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->leaveroomresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.LeaveRoomResp)
  return target;
}

size_t LeaveRoomResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.LeaveRoomResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .zhu.room.ERROR_CODE leaveRoomResult = 1;
  if (has_leaveroomresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->leaveroomresult());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.LeaveRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveRoomResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.LeaveRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.LeaveRoomResp)
    MergeFrom(*source);
  }
}

void LeaveRoomResp::MergeFrom(const LeaveRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.LeaveRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_leaveroomresult()) {
    set_leaveroomresult(from.leaveroomresult());
  }
}

void LeaveRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.LeaveRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveRoomResp::CopyFrom(const LeaveRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.LeaveRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveRoomResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LeaveRoomResp::Swap(LeaveRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveRoomResp::InternalSwap(LeaveRoomResp* other) {
  std::swap(leaveroomresult_, other->leaveroomresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveRoomResp::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveRoomResp

// required .zhu.room.ERROR_CODE leaveRoomResult = 1;
bool LeaveRoomResp::has_leaveroomresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LeaveRoomResp::set_has_leaveroomresult() {
  _has_bits_[0] |= 0x00000001u;
}
void LeaveRoomResp::clear_has_leaveroomresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void LeaveRoomResp::clear_leaveroomresult() {
  leaveroomresult_ = 0;
  clear_has_leaveroomresult();
}
::zhu::room::ERROR_CODE LeaveRoomResp::leaveroomresult() const {
  // @@protoc_insertion_point(field_get:zhu.room.LeaveRoomResp.leaveRoomResult)
  return static_cast< ::zhu::room::ERROR_CODE >(leaveroomresult_);
}
void LeaveRoomResp::set_leaveroomresult(::zhu::room::ERROR_CODE value) {
  assert(::zhu::room::ERROR_CODE_IsValid(value));
  set_has_leaveroomresult();
  leaveroomresult_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.LeaveRoomResp.leaveRoomResult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomReq::kAccountFieldNumber;
const int EnterRoomReq::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomReq::EnterRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.EnterRoomReq)
}
EnterRoomReq::EnterRoomReq(const EnterRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:zhu.room.EnterRoomReq)
}

void EnterRoomReq::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_ = 0u;
}

EnterRoomReq::~EnterRoomReq() {
  // @@protoc_insertion_point(destructor:zhu.room.EnterRoomReq)
  SharedDtor();
}

void EnterRoomReq::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnterRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoomReq::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoomReq& EnterRoomReq::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterRoomReq* EnterRoomReq::New(::google::protobuf::Arena* arena) const {
  EnterRoomReq* n = new EnterRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.EnterRoomReq)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  roomid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.EnterRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 roomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.EnterRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.EnterRoomReq)
  return false;
#undef DO_
}

void EnterRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.EnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // required uint32 roomId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.EnterRoomReq)
}

::google::protobuf::uint8* EnterRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.EnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // required uint32 roomId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.EnterRoomReq)
  return target;
}

size_t EnterRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.room.EnterRoomReq)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_roomid()) {
    // required uint32 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  return total_size;
}
size_t EnterRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.EnterRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required uint32 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.EnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.EnterRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.EnterRoomReq)
    MergeFrom(*source);
  }
}

void EnterRoomReq::MergeFrom(const EnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.EnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnterRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.EnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomReq::CopyFrom(const EnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.EnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void EnterRoomReq::Swap(EnterRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomReq::InternalSwap(EnterRoomReq* other) {
  account_.Swap(&other->account_);
  std::swap(roomid_, other->roomid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoomReq::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomReq

// required bytes account = 1;
bool EnterRoomReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterRoomReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterRoomReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterRoomReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& EnterRoomReq::account() const {
  // @@protoc_insertion_point(field_get:zhu.room.EnterRoomReq.account)
  return account_.GetNoArena();
}
void EnterRoomReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.EnterRoomReq.account)
}
#if LANG_CXX11
void EnterRoomReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.EnterRoomReq.account)
}
#endif
void EnterRoomReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.EnterRoomReq.account)
}
void EnterRoomReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.EnterRoomReq.account)
}
::std::string* EnterRoomReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.room.EnterRoomReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnterRoomReq::release_account() {
  // @@protoc_insertion_point(field_release:zhu.room.EnterRoomReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnterRoomReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.EnterRoomReq.account)
}

// required uint32 roomId = 2;
bool EnterRoomReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterRoomReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterRoomReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterRoomReq::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
::google::protobuf::uint32 EnterRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:zhu.room.EnterRoomReq.roomId)
  return roomid_;
}
void EnterRoomReq::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.EnterRoomReq.roomId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomResp::kEnterResultFieldNumber;
const int EnterRoomResp::kRoomInfoFieldNumber;
const int EnterRoomResp::kDescFieldNumber;
const int EnterRoomResp::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomResp::EnterRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.EnterRoomResp)
}
EnterRoomResp::EnterRoomResp(const EnterRoomResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_roominfo()) {
    roominfo_ = new ::zhu::room::Room(*from.roominfo_);
  } else {
    roominfo_ = NULL;
  }
  ::memcpy(&enterresult_, &from.enterresult_,
    reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&enterresult_) + sizeof(position_));
  // @@protoc_insertion_point(copy_constructor:zhu.room.EnterRoomResp)
}

void EnterRoomResp::SharedCtor() {
  _cached_size_ = 0;
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roominfo_, 0, reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&roominfo_) + sizeof(position_));
}

EnterRoomResp::~EnterRoomResp() {
  // @@protoc_insertion_point(destructor:zhu.room.EnterRoomResp)
  SharedDtor();
}

void EnterRoomResp::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete roominfo_;
  }
}

void EnterRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoomResp::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoomResp& EnterRoomResp::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterRoomResp* EnterRoomResp::New(::google::protobuf::Arena* arena) const {
  EnterRoomResp* n = new EnterRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.EnterRoomResp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
    if (has_roominfo()) {
      GOOGLE_DCHECK(roominfo_ != NULL);
      roominfo_->::zhu::room::Room::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&enterresult_, 0, reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&enterresult_) + sizeof(position_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.EnterRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .zhu.room.ERROR_CODE enterResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::room::ERROR_CODE_IsValid(value)) {
            set_enterresult(static_cast< ::zhu::room::ERROR_CODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.room.Room roomInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roominfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.EnterRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.EnterRoomResp)
  return false;
#undef DO_
}

void EnterRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.EnterRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.ERROR_CODE enterResult = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->enterresult(), output);
  }

  // optional .zhu.room.Room roomInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->roominfo_, output);
  }

  // optional bytes desc = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->desc(), output);
  }

  // optional uint32 position = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.EnterRoomResp)
}

::google::protobuf::uint8* EnterRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.EnterRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.ERROR_CODE enterResult = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->enterresult(), target);
  }

  // optional .zhu.room.Room roomInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->roominfo_, deterministic, target);
  }

  // optional bytes desc = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->desc(), target);
  }

  // optional uint32 position = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->position(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.EnterRoomResp)
  return target;
}

size_t EnterRoomResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.EnterRoomResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .zhu.room.ERROR_CODE enterResult = 1;
  if (has_enterresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enterresult());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes desc = 3;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }

    // optional .zhu.room.Room roomInfo = 2;
    if (has_roominfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->roominfo_);
    }

  }
  // optional uint32 position = 4;
  if (has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.EnterRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoomResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.EnterRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.EnterRoomResp)
    MergeFrom(*source);
  }
}

void EnterRoomResp::MergeFrom(const EnterRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.EnterRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_roominfo()->::zhu::room::Room::MergeFrom(from.roominfo());
    }
    if (cached_has_bits & 0x00000004u) {
      enterresult_ = from.enterresult_;
    }
    if (cached_has_bits & 0x00000008u) {
      position_ = from.position_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnterRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.EnterRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomResp::CopyFrom(const EnterRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.EnterRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_roominfo()) {
    if (!this->roominfo_->IsInitialized()) return false;
  }
  return true;
}

void EnterRoomResp::Swap(EnterRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomResp::InternalSwap(EnterRoomResp* other) {
  desc_.Swap(&other->desc_);
  std::swap(roominfo_, other->roominfo_);
  std::swap(enterresult_, other->enterresult_);
  std::swap(position_, other->position_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoomResp::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomResp

// required .zhu.room.ERROR_CODE enterResult = 1;
bool EnterRoomResp::has_enterresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EnterRoomResp::set_has_enterresult() {
  _has_bits_[0] |= 0x00000004u;
}
void EnterRoomResp::clear_has_enterresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void EnterRoomResp::clear_enterresult() {
  enterresult_ = 0;
  clear_has_enterresult();
}
::zhu::room::ERROR_CODE EnterRoomResp::enterresult() const {
  // @@protoc_insertion_point(field_get:zhu.room.EnterRoomResp.enterResult)
  return static_cast< ::zhu::room::ERROR_CODE >(enterresult_);
}
void EnterRoomResp::set_enterresult(::zhu::room::ERROR_CODE value) {
  assert(::zhu::room::ERROR_CODE_IsValid(value));
  set_has_enterresult();
  enterresult_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.EnterRoomResp.enterResult)
}

// optional .zhu.room.Room roomInfo = 2;
bool EnterRoomResp::has_roominfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterRoomResp::set_has_roominfo() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterRoomResp::clear_has_roominfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterRoomResp::clear_roominfo() {
  if (roominfo_ != NULL) roominfo_->::zhu::room::Room::Clear();
  clear_has_roominfo();
}
const ::zhu::room::Room& EnterRoomResp::roominfo() const {
  // @@protoc_insertion_point(field_get:zhu.room.EnterRoomResp.roomInfo)
  return roominfo_ != NULL ? *roominfo_
                         : *::zhu::room::Room::internal_default_instance();
}
::zhu::room::Room* EnterRoomResp::mutable_roominfo() {
  set_has_roominfo();
  if (roominfo_ == NULL) {
    roominfo_ = new ::zhu::room::Room;
  }
  // @@protoc_insertion_point(field_mutable:zhu.room.EnterRoomResp.roomInfo)
  return roominfo_;
}
::zhu::room::Room* EnterRoomResp::release_roominfo() {
  // @@protoc_insertion_point(field_release:zhu.room.EnterRoomResp.roomInfo)
  clear_has_roominfo();
  ::zhu::room::Room* temp = roominfo_;
  roominfo_ = NULL;
  return temp;
}
void EnterRoomResp::set_allocated_roominfo(::zhu::room::Room* roominfo) {
  delete roominfo_;
  roominfo_ = roominfo;
  if (roominfo) {
    set_has_roominfo();
  } else {
    clear_has_roominfo();
  }
  // @@protoc_insertion_point(field_set_allocated:zhu.room.EnterRoomResp.roomInfo)
}

// optional bytes desc = 3;
bool EnterRoomResp::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterRoomResp::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterRoomResp::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterRoomResp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& EnterRoomResp::desc() const {
  // @@protoc_insertion_point(field_get:zhu.room.EnterRoomResp.desc)
  return desc_.GetNoArena();
}
void EnterRoomResp::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.EnterRoomResp.desc)
}
#if LANG_CXX11
void EnterRoomResp::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.EnterRoomResp.desc)
}
#endif
void EnterRoomResp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.EnterRoomResp.desc)
}
void EnterRoomResp::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.EnterRoomResp.desc)
}
::std::string* EnterRoomResp::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:zhu.room.EnterRoomResp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnterRoomResp::release_desc() {
  // @@protoc_insertion_point(field_release:zhu.room.EnterRoomResp.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnterRoomResp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.EnterRoomResp.desc)
}

// optional uint32 position = 4;
bool EnterRoomResp::has_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EnterRoomResp::set_has_position() {
  _has_bits_[0] |= 0x00000008u;
}
void EnterRoomResp::clear_has_position() {
  _has_bits_[0] &= ~0x00000008u;
}
void EnterRoomResp::clear_position() {
  position_ = 0u;
  clear_has_position();
}
::google::protobuf::uint32 EnterRoomResp::position() const {
  // @@protoc_insertion_point(field_get:zhu.room.EnterRoomResp.position)
  return position_;
}
void EnterRoomResp::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.EnterRoomResp.position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomReq::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomReq::CreateRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.CreateRoomReq)
}
CreateRoomReq::CreateRoomReq(const CreateRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  // @@protoc_insertion_point(copy_constructor:zhu.room.CreateRoomReq)
}

void CreateRoomReq::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateRoomReq::~CreateRoomReq() {
  // @@protoc_insertion_point(destructor:zhu.room.CreateRoomReq)
  SharedDtor();
}

void CreateRoomReq::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoomReq::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomReq& CreateRoomReq::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRoomReq* CreateRoomReq::New(::google::protobuf::Arena* arena) const {
  CreateRoomReq* n = new CreateRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.CreateRoomReq)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.CreateRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.CreateRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.CreateRoomReq)
  return false;
#undef DO_
}

void CreateRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.CreateRoomReq)
}

::google::protobuf::uint8* CreateRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.CreateRoomReq)
  return target;
}

size_t CreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.CreateRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required bytes account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.CreateRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.CreateRoomReq)
    MergeFrom(*source);
  }
}

void CreateRoomReq::MergeFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account()) {
    set_has_account();
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
}

void CreateRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomReq::CopyFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CreateRoomReq::Swap(CreateRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomReq::InternalSwap(CreateRoomReq* other) {
  account_.Swap(&other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoomReq::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRoomReq

// required bytes account = 1;
bool CreateRoomReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateRoomReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateRoomReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateRoomReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& CreateRoomReq::account() const {
  // @@protoc_insertion_point(field_get:zhu.room.CreateRoomReq.account)
  return account_.GetNoArena();
}
void CreateRoomReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.CreateRoomReq.account)
}
#if LANG_CXX11
void CreateRoomReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.CreateRoomReq.account)
}
#endif
void CreateRoomReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.CreateRoomReq.account)
}
void CreateRoomReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.CreateRoomReq.account)
}
::std::string* CreateRoomReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.room.CreateRoomReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRoomReq::release_account() {
  // @@protoc_insertion_point(field_release:zhu.room.CreateRoomReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRoomReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.CreateRoomReq.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomResp::kCreateResultFieldNumber;
const int CreateRoomResp::kDescFieldNumber;
const int CreateRoomResp::kCreateRoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomResp::CreateRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.CreateRoomResp)
}
CreateRoomResp::CreateRoomResp(const CreateRoomResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_createroom()) {
    createroom_ = new ::zhu::room::Room(*from.createroom_);
  } else {
    createroom_ = NULL;
  }
  createresult_ = from.createresult_;
  // @@protoc_insertion_point(copy_constructor:zhu.room.CreateRoomResp)
}

void CreateRoomResp::SharedCtor() {
  _cached_size_ = 0;
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&createroom_, 0, reinterpret_cast<char*>(&createresult_) -
    reinterpret_cast<char*>(&createroom_) + sizeof(createresult_));
}

CreateRoomResp::~CreateRoomResp() {
  // @@protoc_insertion_point(destructor:zhu.room.CreateRoomResp)
  SharedDtor();
}

void CreateRoomResp::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete createroom_;
  }
}

void CreateRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoomResp::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomResp& CreateRoomResp::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRoomResp* CreateRoomResp::New(::google::protobuf::Arena* arena) const {
  CreateRoomResp* n = new CreateRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.CreateRoomResp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
    if (has_createroom()) {
      GOOGLE_DCHECK(createroom_ != NULL);
      createroom_->::zhu::room::Room::Clear();
    }
  }
  createresult_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.CreateRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .zhu.room.ERROR_CODE createResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::room::ERROR_CODE_IsValid(value)) {
            set_createresult(static_cast< ::zhu::room::ERROR_CODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zhu.room.Room createRoom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createroom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.CreateRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.CreateRoomResp)
  return false;
#undef DO_
}

void CreateRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.CreateRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.ERROR_CODE createResult = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->createresult(), output);
  }

  // optional bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->desc(), output);
  }

  // optional .zhu.room.Room createRoom = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->createroom_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.CreateRoomResp)
}

::google::protobuf::uint8* CreateRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.CreateRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.ERROR_CODE createResult = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->createresult(), target);
  }

  // optional bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  // optional .zhu.room.Room createRoom = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->createroom_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.CreateRoomResp)
  return target;
}

size_t CreateRoomResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.CreateRoomResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .zhu.room.ERROR_CODE createResult = 1;
  if (has_createresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->createresult());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes desc = 2;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }

    // optional .zhu.room.Room createRoom = 3;
    if (has_createroom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createroom_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.CreateRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.CreateRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.CreateRoomResp)
    MergeFrom(*source);
  }
}

void CreateRoomResp::MergeFrom(const CreateRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.CreateRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_createroom()->::zhu::room::Room::MergeFrom(from.createroom());
    }
    if (cached_has_bits & 0x00000004u) {
      createresult_ = from.createresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.CreateRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomResp::CopyFrom(const CreateRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.CreateRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_createroom()) {
    if (!this->createroom_->IsInitialized()) return false;
  }
  return true;
}

void CreateRoomResp::Swap(CreateRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomResp::InternalSwap(CreateRoomResp* other) {
  desc_.Swap(&other->desc_);
  std::swap(createroom_, other->createroom_);
  std::swap(createresult_, other->createresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoomResp::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRoomResp

// required .zhu.room.ERROR_CODE createResult = 1;
bool CreateRoomResp::has_createresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateRoomResp::set_has_createresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateRoomResp::clear_has_createresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateRoomResp::clear_createresult() {
  createresult_ = 0;
  clear_has_createresult();
}
::zhu::room::ERROR_CODE CreateRoomResp::createresult() const {
  // @@protoc_insertion_point(field_get:zhu.room.CreateRoomResp.createResult)
  return static_cast< ::zhu::room::ERROR_CODE >(createresult_);
}
void CreateRoomResp::set_createresult(::zhu::room::ERROR_CODE value) {
  assert(::zhu::room::ERROR_CODE_IsValid(value));
  set_has_createresult();
  createresult_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.CreateRoomResp.createResult)
}

// optional bytes desc = 2;
bool CreateRoomResp::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateRoomResp::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateRoomResp::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateRoomResp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& CreateRoomResp::desc() const {
  // @@protoc_insertion_point(field_get:zhu.room.CreateRoomResp.desc)
  return desc_.GetNoArena();
}
void CreateRoomResp::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.CreateRoomResp.desc)
}
#if LANG_CXX11
void CreateRoomResp::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.CreateRoomResp.desc)
}
#endif
void CreateRoomResp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.CreateRoomResp.desc)
}
void CreateRoomResp::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.CreateRoomResp.desc)
}
::std::string* CreateRoomResp::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:zhu.room.CreateRoomResp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRoomResp::release_desc() {
  // @@protoc_insertion_point(field_release:zhu.room.CreateRoomResp.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRoomResp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.CreateRoomResp.desc)
}

// optional .zhu.room.Room createRoom = 3;
bool CreateRoomResp::has_createroom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateRoomResp::set_has_createroom() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateRoomResp::clear_has_createroom() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateRoomResp::clear_createroom() {
  if (createroom_ != NULL) createroom_->::zhu::room::Room::Clear();
  clear_has_createroom();
}
const ::zhu::room::Room& CreateRoomResp::createroom() const {
  // @@protoc_insertion_point(field_get:zhu.room.CreateRoomResp.createRoom)
  return createroom_ != NULL ? *createroom_
                         : *::zhu::room::Room::internal_default_instance();
}
::zhu::room::Room* CreateRoomResp::mutable_createroom() {
  set_has_createroom();
  if (createroom_ == NULL) {
    createroom_ = new ::zhu::room::Room;
  }
  // @@protoc_insertion_point(field_mutable:zhu.room.CreateRoomResp.createRoom)
  return createroom_;
}
::zhu::room::Room* CreateRoomResp::release_createroom() {
  // @@protoc_insertion_point(field_release:zhu.room.CreateRoomResp.createRoom)
  clear_has_createroom();
  ::zhu::room::Room* temp = createroom_;
  createroom_ = NULL;
  return temp;
}
void CreateRoomResp::set_allocated_createroom(::zhu::room::Room* createroom) {
  delete createroom_;
  createroom_ = createroom;
  if (createroom) {
    set_has_createroom();
  } else {
    clear_has_createroom();
  }
  // @@protoc_insertion_point(field_set_allocated:zhu.room.CreateRoomResp.createRoom)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadyReq::kAccountFieldNumber;
const int ReadyReq::kRoomidFieldNumber;
const int ReadyReq::kReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadyReq::ReadyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.ReadyReq)
}
ReadyReq::ReadyReq(const ReadyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    reinterpret_cast<char*>(&ready_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(ready_));
  // @@protoc_insertion_point(copy_constructor:zhu.room.ReadyReq)
}

void ReadyReq::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&ready_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(ready_));
}

ReadyReq::~ReadyReq() {
  // @@protoc_insertion_point(destructor:zhu.room.ReadyReq)
  SharedDtor();
}

void ReadyReq::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadyReq::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadyReq& ReadyReq::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadyReq* ReadyReq::New(::google::protobuf::Arena* arena) const {
  ReadyReq* n = new ReadyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.ReadyReq)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&roomid_, 0, reinterpret_cast<char*>(&ready_) -
      reinterpret_cast<char*>(&roomid_) + sizeof(ready_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReadyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.ReadyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool ready = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_ready();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.ReadyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.ReadyReq)
  return false;
#undef DO_
}

void ReadyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.ReadyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // required uint32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  // required bool ready = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ready(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.ReadyReq)
}

::google::protobuf::uint8* ReadyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.ReadyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // required uint32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  // required bool ready = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ready(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.ReadyReq)
  return target;
}

size_t ReadyReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.room.ReadyReq)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_roomid()) {
    // required uint32 roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  if (has_ready()) {
    // required bool ready = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ReadyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.ReadyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required uint32 roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());

    // required bool ready = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.ReadyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.ReadyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.ReadyReq)
    MergeFrom(*source);
  }
}

void ReadyReq::MergeFrom(const ReadyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.ReadyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00000004u) {
      ready_ = from.ready_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReadyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.ReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadyReq::CopyFrom(const ReadyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.ReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ReadyReq::Swap(ReadyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadyReq::InternalSwap(ReadyReq* other) {
  account_.Swap(&other->account_);
  std::swap(roomid_, other->roomid_);
  std::swap(ready_, other->ready_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadyReq::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadyReq

// required bytes account = 1;
bool ReadyReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReadyReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void ReadyReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReadyReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& ReadyReq::account() const {
  // @@protoc_insertion_point(field_get:zhu.room.ReadyReq.account)
  return account_.GetNoArena();
}
void ReadyReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.ReadyReq.account)
}
#if LANG_CXX11
void ReadyReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.ReadyReq.account)
}
#endif
void ReadyReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.ReadyReq.account)
}
void ReadyReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.ReadyReq.account)
}
::std::string* ReadyReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.room.ReadyReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadyReq::release_account() {
  // @@protoc_insertion_point(field_release:zhu.room.ReadyReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadyReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.ReadyReq.account)
}

// required uint32 roomid = 2;
bool ReadyReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReadyReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
void ReadyReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReadyReq::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
::google::protobuf::uint32 ReadyReq::roomid() const {
  // @@protoc_insertion_point(field_get:zhu.room.ReadyReq.roomid)
  return roomid_;
}
void ReadyReq::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.ReadyReq.roomid)
}

// required bool ready = 3;
bool ReadyReq::has_ready() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ReadyReq::set_has_ready() {
  _has_bits_[0] |= 0x00000004u;
}
void ReadyReq::clear_has_ready() {
  _has_bits_[0] &= ~0x00000004u;
}
void ReadyReq::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
bool ReadyReq::ready() const {
  // @@protoc_insertion_point(field_get:zhu.room.ReadyReq.ready)
  return ready_;
}
void ReadyReq::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.ReadyReq.ready)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadyResp::kReadyResultFieldNumber;
const int ReadyResp::kAccountFieldNumber;
const int ReadyResp::kPositionFieldNumber;
const int ReadyResp::kReadyFieldNumber;
const int ReadyResp::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadyResp::ReadyResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.ReadyResp)
}
ReadyResp::ReadyResp(const ReadyResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  ::memcpy(&readyresult_, &from.readyresult_,
    reinterpret_cast<char*>(&ready_) -
    reinterpret_cast<char*>(&readyresult_) + sizeof(ready_));
  // @@protoc_insertion_point(copy_constructor:zhu.room.ReadyResp)
}

void ReadyResp::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&readyresult_, 0, reinterpret_cast<char*>(&ready_) -
    reinterpret_cast<char*>(&readyresult_) + sizeof(ready_));
}

ReadyResp::~ReadyResp() {
  // @@protoc_insertion_point(destructor:zhu.room.ReadyResp)
  SharedDtor();
}

void ReadyResp::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadyResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadyResp::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadyResp& ReadyResp::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadyResp* ReadyResp::New(::google::protobuf::Arena* arena) const {
  ReadyResp* n = new ReadyResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadyResp::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.ReadyResp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&readyresult_, 0, reinterpret_cast<char*>(&ready_) -
      reinterpret_cast<char*>(&readyresult_) + sizeof(ready_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReadyResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.ReadyResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .zhu.room.ERROR_CODE readyResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zhu::room::ERROR_CODE_IsValid(value)) {
            set_readyresult(static_cast< ::zhu::room::ERROR_CODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ready = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_ready();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes desc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.ReadyResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.ReadyResp)
  return false;
#undef DO_
}

void ReadyResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.ReadyResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.ERROR_CODE readyResult = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->readyresult(), output);
  }

  // optional bytes account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->account(), output);
  }

  // optional uint32 position = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->position(), output);
  }

  // optional bool ready = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->ready(), output);
  }

  // optional bytes desc = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->desc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.ReadyResp)
}

::google::protobuf::uint8* ReadyResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.ReadyResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .zhu.room.ERROR_CODE readyResult = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->readyresult(), target);
  }

  // optional bytes account = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->account(), target);
  }

  // optional uint32 position = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->position(), target);
  }

  // optional bool ready = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->ready(), target);
  }

  // optional bytes desc = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->desc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.ReadyResp)
  return target;
}

size_t ReadyResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.ReadyResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .zhu.room.ERROR_CODE readyResult = 1;
  if (has_readyresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->readyresult());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->account());
    }

    // optional bytes desc = 5;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }

  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional uint32 position = 3;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->position());
    }

    // optional bool ready = 4;
    if (has_ready()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadyResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.ReadyResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadyResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadyResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.ReadyResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.ReadyResp)
    MergeFrom(*source);
  }
}

void ReadyResp::MergeFrom(const ReadyResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.ReadyResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000004u) {
      readyresult_ = from.readyresult_;
    }
    if (cached_has_bits & 0x00000008u) {
      position_ = from.position_;
    }
    if (cached_has_bits & 0x00000010u) {
      ready_ = from.ready_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReadyResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.ReadyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadyResp::CopyFrom(const ReadyResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.ReadyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadyResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void ReadyResp::Swap(ReadyResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadyResp::InternalSwap(ReadyResp* other) {
  account_.Swap(&other->account_);
  desc_.Swap(&other->desc_);
  std::swap(readyresult_, other->readyresult_);
  std::swap(position_, other->position_);
  std::swap(ready_, other->ready_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadyResp::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadyResp

// required .zhu.room.ERROR_CODE readyResult = 1;
bool ReadyResp::has_readyresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ReadyResp::set_has_readyresult() {
  _has_bits_[0] |= 0x00000004u;
}
void ReadyResp::clear_has_readyresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void ReadyResp::clear_readyresult() {
  readyresult_ = 0;
  clear_has_readyresult();
}
::zhu::room::ERROR_CODE ReadyResp::readyresult() const {
  // @@protoc_insertion_point(field_get:zhu.room.ReadyResp.readyResult)
  return static_cast< ::zhu::room::ERROR_CODE >(readyresult_);
}
void ReadyResp::set_readyresult(::zhu::room::ERROR_CODE value) {
  assert(::zhu::room::ERROR_CODE_IsValid(value));
  set_has_readyresult();
  readyresult_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.ReadyResp.readyResult)
}

// optional bytes account = 2;
bool ReadyResp::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReadyResp::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void ReadyResp::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReadyResp::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& ReadyResp::account() const {
  // @@protoc_insertion_point(field_get:zhu.room.ReadyResp.account)
  return account_.GetNoArena();
}
void ReadyResp::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.ReadyResp.account)
}
#if LANG_CXX11
void ReadyResp::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.ReadyResp.account)
}
#endif
void ReadyResp::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.ReadyResp.account)
}
void ReadyResp::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.ReadyResp.account)
}
::std::string* ReadyResp::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:zhu.room.ReadyResp.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadyResp::release_account() {
  // @@protoc_insertion_point(field_release:zhu.room.ReadyResp.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadyResp::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.ReadyResp.account)
}

// optional uint32 position = 3;
bool ReadyResp::has_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ReadyResp::set_has_position() {
  _has_bits_[0] |= 0x00000008u;
}
void ReadyResp::clear_has_position() {
  _has_bits_[0] &= ~0x00000008u;
}
void ReadyResp::clear_position() {
  position_ = 0u;
  clear_has_position();
}
::google::protobuf::uint32 ReadyResp::position() const {
  // @@protoc_insertion_point(field_get:zhu.room.ReadyResp.position)
  return position_;
}
void ReadyResp::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.ReadyResp.position)
}

// optional bool ready = 4;
bool ReadyResp::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ReadyResp::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
void ReadyResp::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
void ReadyResp::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
bool ReadyResp::ready() const {
  // @@protoc_insertion_point(field_get:zhu.room.ReadyResp.ready)
  return ready_;
}
void ReadyResp::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.ReadyResp.ready)
}

// optional bytes desc = 5;
bool ReadyResp::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReadyResp::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
void ReadyResp::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReadyResp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& ReadyResp::desc() const {
  // @@protoc_insertion_point(field_get:zhu.room.ReadyResp.desc)
  return desc_.GetNoArena();
}
void ReadyResp::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.ReadyResp.desc)
}
#if LANG_CXX11
void ReadyResp::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.ReadyResp.desc)
}
#endif
void ReadyResp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.ReadyResp.desc)
}
void ReadyResp::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.ReadyResp.desc)
}
::std::string* ReadyResp::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:zhu.room.ReadyResp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadyResp::release_desc() {
  // @@protoc_insertion_point(field_release:zhu.room.ReadyResp.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadyResp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.ReadyResp.desc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameOverMsg::kRoomidFieldNumber;
const int GameOverMsg::kWinFirstAccountFieldNumber;
const int GameOverMsg::kWinSecondAccountFieldNumber;
const int GameOverMsg::kLoseFirstAccountFieldNumber;
const int GameOverMsg::kLoseSecondAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameOverMsg::GameOverMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.GameOverMsg)
}
GameOverMsg::GameOverMsg(const GameOverMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  winfirstaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_winfirstaccount()) {
    winfirstaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winfirstaccount_);
  }
  winsecondaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_winsecondaccount()) {
    winsecondaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winsecondaccount_);
  }
  losefirstaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_losefirstaccount()) {
    losefirstaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.losefirstaccount_);
  }
  losesecondaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_losesecondaccount()) {
    losesecondaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.losesecondaccount_);
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:zhu.room.GameOverMsg)
}

void GameOverMsg::SharedCtor() {
  _cached_size_ = 0;
  winfirstaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winsecondaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  losefirstaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  losesecondaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_ = 0u;
}

GameOverMsg::~GameOverMsg() {
  // @@protoc_insertion_point(destructor:zhu.room.GameOverMsg)
  SharedDtor();
}

void GameOverMsg::SharedDtor() {
  winfirstaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winsecondaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  losefirstaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  losesecondaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameOverMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameOverMsg::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameOverMsg& GameOverMsg::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameOverMsg* GameOverMsg::New(::google::protobuf::Arena* arena) const {
  GameOverMsg* n = new GameOverMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameOverMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.GameOverMsg)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_winfirstaccount()) {
      GOOGLE_DCHECK(!winfirstaccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*winfirstaccount_.UnsafeRawStringPointer())->clear();
    }
    if (has_winsecondaccount()) {
      GOOGLE_DCHECK(!winsecondaccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*winsecondaccount_.UnsafeRawStringPointer())->clear();
    }
    if (has_losefirstaccount()) {
      GOOGLE_DCHECK(!losefirstaccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*losefirstaccount_.UnsafeRawStringPointer())->clear();
    }
    if (has_losesecondaccount()) {
      GOOGLE_DCHECK(!losesecondaccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*losesecondaccount_.UnsafeRawStringPointer())->clear();
    }
  }
  roomid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameOverMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.GameOverMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes winFirstAccount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_winfirstaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes winSecondAccount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_winsecondaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes loseFirstAccount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_losefirstaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes loseSecondAccount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_losesecondaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.GameOverMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.GameOverMsg)
  return false;
#undef DO_
}

void GameOverMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.GameOverMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 roomid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  // optional bytes winFirstAccount = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->winfirstaccount(), output);
  }

  // optional bytes winSecondAccount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->winsecondaccount(), output);
  }

  // optional bytes loseFirstAccount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->losefirstaccount(), output);
  }

  // optional bytes loseSecondAccount = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->losesecondaccount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.GameOverMsg)
}

::google::protobuf::uint8* GameOverMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.GameOverMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 roomid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  // optional bytes winFirstAccount = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->winfirstaccount(), target);
  }

  // optional bytes winSecondAccount = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->winsecondaccount(), target);
  }

  // optional bytes loseFirstAccount = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->losefirstaccount(), target);
  }

  // optional bytes loseSecondAccount = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->losesecondaccount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.GameOverMsg)
  return target;
}

size_t GameOverMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.GameOverMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 roomid = 1;
  if (has_roomid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes winFirstAccount = 2;
    if (has_winfirstaccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->winfirstaccount());
    }

    // optional bytes winSecondAccount = 3;
    if (has_winsecondaccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->winsecondaccount());
    }

    // optional bytes loseFirstAccount = 4;
    if (has_losefirstaccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->losefirstaccount());
    }

    // optional bytes loseSecondAccount = 5;
    if (has_losesecondaccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->losesecondaccount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameOverMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.GameOverMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GameOverMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameOverMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.GameOverMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.GameOverMsg)
    MergeFrom(*source);
  }
}

void GameOverMsg::MergeFrom(const GameOverMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.GameOverMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_winfirstaccount();
      winfirstaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winfirstaccount_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_winsecondaccount();
      winsecondaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winsecondaccount_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_losefirstaccount();
      losefirstaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.losefirstaccount_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_losesecondaccount();
      losesecondaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.losesecondaccount_);
    }
    if (cached_has_bits & 0x00000010u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameOverMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.GameOverMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameOverMsg::CopyFrom(const GameOverMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.GameOverMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameOverMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  return true;
}

void GameOverMsg::Swap(GameOverMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameOverMsg::InternalSwap(GameOverMsg* other) {
  winfirstaccount_.Swap(&other->winfirstaccount_);
  winsecondaccount_.Swap(&other->winsecondaccount_);
  losefirstaccount_.Swap(&other->losefirstaccount_);
  losesecondaccount_.Swap(&other->losesecondaccount_);
  std::swap(roomid_, other->roomid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameOverMsg::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameOverMsg

// required uint32 roomid = 1;
bool GameOverMsg::has_roomid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GameOverMsg::set_has_roomid() {
  _has_bits_[0] |= 0x00000010u;
}
void GameOverMsg::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000010u;
}
void GameOverMsg::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
::google::protobuf::uint32 GameOverMsg::roomid() const {
  // @@protoc_insertion_point(field_get:zhu.room.GameOverMsg.roomid)
  return roomid_;
}
void GameOverMsg::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.GameOverMsg.roomid)
}

// optional bytes winFirstAccount = 2;
bool GameOverMsg::has_winfirstaccount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameOverMsg::set_has_winfirstaccount() {
  _has_bits_[0] |= 0x00000001u;
}
void GameOverMsg::clear_has_winfirstaccount() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameOverMsg::clear_winfirstaccount() {
  winfirstaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_winfirstaccount();
}
const ::std::string& GameOverMsg::winfirstaccount() const {
  // @@protoc_insertion_point(field_get:zhu.room.GameOverMsg.winFirstAccount)
  return winfirstaccount_.GetNoArena();
}
void GameOverMsg::set_winfirstaccount(const ::std::string& value) {
  set_has_winfirstaccount();
  winfirstaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.GameOverMsg.winFirstAccount)
}
#if LANG_CXX11
void GameOverMsg::set_winfirstaccount(::std::string&& value) {
  set_has_winfirstaccount();
  winfirstaccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.GameOverMsg.winFirstAccount)
}
#endif
void GameOverMsg::set_winfirstaccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_winfirstaccount();
  winfirstaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.GameOverMsg.winFirstAccount)
}
void GameOverMsg::set_winfirstaccount(const void* value, size_t size) {
  set_has_winfirstaccount();
  winfirstaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.GameOverMsg.winFirstAccount)
}
::std::string* GameOverMsg::mutable_winfirstaccount() {
  set_has_winfirstaccount();
  // @@protoc_insertion_point(field_mutable:zhu.room.GameOverMsg.winFirstAccount)
  return winfirstaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameOverMsg::release_winfirstaccount() {
  // @@protoc_insertion_point(field_release:zhu.room.GameOverMsg.winFirstAccount)
  clear_has_winfirstaccount();
  return winfirstaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameOverMsg::set_allocated_winfirstaccount(::std::string* winfirstaccount) {
  if (winfirstaccount != NULL) {
    set_has_winfirstaccount();
  } else {
    clear_has_winfirstaccount();
  }
  winfirstaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), winfirstaccount);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.GameOverMsg.winFirstAccount)
}

// optional bytes winSecondAccount = 3;
bool GameOverMsg::has_winsecondaccount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GameOverMsg::set_has_winsecondaccount() {
  _has_bits_[0] |= 0x00000002u;
}
void GameOverMsg::clear_has_winsecondaccount() {
  _has_bits_[0] &= ~0x00000002u;
}
void GameOverMsg::clear_winsecondaccount() {
  winsecondaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_winsecondaccount();
}
const ::std::string& GameOverMsg::winsecondaccount() const {
  // @@protoc_insertion_point(field_get:zhu.room.GameOverMsg.winSecondAccount)
  return winsecondaccount_.GetNoArena();
}
void GameOverMsg::set_winsecondaccount(const ::std::string& value) {
  set_has_winsecondaccount();
  winsecondaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.GameOverMsg.winSecondAccount)
}
#if LANG_CXX11
void GameOverMsg::set_winsecondaccount(::std::string&& value) {
  set_has_winsecondaccount();
  winsecondaccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.GameOverMsg.winSecondAccount)
}
#endif
void GameOverMsg::set_winsecondaccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_winsecondaccount();
  winsecondaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.GameOverMsg.winSecondAccount)
}
void GameOverMsg::set_winsecondaccount(const void* value, size_t size) {
  set_has_winsecondaccount();
  winsecondaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.GameOverMsg.winSecondAccount)
}
::std::string* GameOverMsg::mutable_winsecondaccount() {
  set_has_winsecondaccount();
  // @@protoc_insertion_point(field_mutable:zhu.room.GameOverMsg.winSecondAccount)
  return winsecondaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameOverMsg::release_winsecondaccount() {
  // @@protoc_insertion_point(field_release:zhu.room.GameOverMsg.winSecondAccount)
  clear_has_winsecondaccount();
  return winsecondaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameOverMsg::set_allocated_winsecondaccount(::std::string* winsecondaccount) {
  if (winsecondaccount != NULL) {
    set_has_winsecondaccount();
  } else {
    clear_has_winsecondaccount();
  }
  winsecondaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), winsecondaccount);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.GameOverMsg.winSecondAccount)
}

// optional bytes loseFirstAccount = 4;
bool GameOverMsg::has_losefirstaccount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GameOverMsg::set_has_losefirstaccount() {
  _has_bits_[0] |= 0x00000004u;
}
void GameOverMsg::clear_has_losefirstaccount() {
  _has_bits_[0] &= ~0x00000004u;
}
void GameOverMsg::clear_losefirstaccount() {
  losefirstaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_losefirstaccount();
}
const ::std::string& GameOverMsg::losefirstaccount() const {
  // @@protoc_insertion_point(field_get:zhu.room.GameOverMsg.loseFirstAccount)
  return losefirstaccount_.GetNoArena();
}
void GameOverMsg::set_losefirstaccount(const ::std::string& value) {
  set_has_losefirstaccount();
  losefirstaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.GameOverMsg.loseFirstAccount)
}
#if LANG_CXX11
void GameOverMsg::set_losefirstaccount(::std::string&& value) {
  set_has_losefirstaccount();
  losefirstaccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.GameOverMsg.loseFirstAccount)
}
#endif
void GameOverMsg::set_losefirstaccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_losefirstaccount();
  losefirstaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.GameOverMsg.loseFirstAccount)
}
void GameOverMsg::set_losefirstaccount(const void* value, size_t size) {
  set_has_losefirstaccount();
  losefirstaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.GameOverMsg.loseFirstAccount)
}
::std::string* GameOverMsg::mutable_losefirstaccount() {
  set_has_losefirstaccount();
  // @@protoc_insertion_point(field_mutable:zhu.room.GameOverMsg.loseFirstAccount)
  return losefirstaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameOverMsg::release_losefirstaccount() {
  // @@protoc_insertion_point(field_release:zhu.room.GameOverMsg.loseFirstAccount)
  clear_has_losefirstaccount();
  return losefirstaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameOverMsg::set_allocated_losefirstaccount(::std::string* losefirstaccount) {
  if (losefirstaccount != NULL) {
    set_has_losefirstaccount();
  } else {
    clear_has_losefirstaccount();
  }
  losefirstaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), losefirstaccount);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.GameOverMsg.loseFirstAccount)
}

// optional bytes loseSecondAccount = 5;
bool GameOverMsg::has_losesecondaccount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GameOverMsg::set_has_losesecondaccount() {
  _has_bits_[0] |= 0x00000008u;
}
void GameOverMsg::clear_has_losesecondaccount() {
  _has_bits_[0] &= ~0x00000008u;
}
void GameOverMsg::clear_losesecondaccount() {
  losesecondaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_losesecondaccount();
}
const ::std::string& GameOverMsg::losesecondaccount() const {
  // @@protoc_insertion_point(field_get:zhu.room.GameOverMsg.loseSecondAccount)
  return losesecondaccount_.GetNoArena();
}
void GameOverMsg::set_losesecondaccount(const ::std::string& value) {
  set_has_losesecondaccount();
  losesecondaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zhu.room.GameOverMsg.loseSecondAccount)
}
#if LANG_CXX11
void GameOverMsg::set_losesecondaccount(::std::string&& value) {
  set_has_losesecondaccount();
  losesecondaccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zhu.room.GameOverMsg.loseSecondAccount)
}
#endif
void GameOverMsg::set_losesecondaccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_losesecondaccount();
  losesecondaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zhu.room.GameOverMsg.loseSecondAccount)
}
void GameOverMsg::set_losesecondaccount(const void* value, size_t size) {
  set_has_losesecondaccount();
  losesecondaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zhu.room.GameOverMsg.loseSecondAccount)
}
::std::string* GameOverMsg::mutable_losesecondaccount() {
  set_has_losesecondaccount();
  // @@protoc_insertion_point(field_mutable:zhu.room.GameOverMsg.loseSecondAccount)
  return losesecondaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameOverMsg::release_losesecondaccount() {
  // @@protoc_insertion_point(field_release:zhu.room.GameOverMsg.loseSecondAccount)
  clear_has_losesecondaccount();
  return losesecondaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameOverMsg::set_allocated_losesecondaccount(::std::string* losesecondaccount) {
  if (losesecondaccount != NULL) {
    set_has_losesecondaccount();
  } else {
    clear_has_losesecondaccount();
  }
  losesecondaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), losesecondaccount);
  // @@protoc_insertion_point(field_set_allocated:zhu.room.GameOverMsg.loseSecondAccount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomUserCountChangeNotify::kIdFieldNumber;
const int RoomUserCountChangeNotify::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomUserCountChangeNotify::RoomUserCountChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.RoomUserCountChangeNotify)
}
RoomUserCountChangeNotify::RoomUserCountChangeNotify(const RoomUserCountChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:zhu.room.RoomUserCountChangeNotify)
}

void RoomUserCountChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_) + sizeof(count_));
}

RoomUserCountChangeNotify::~RoomUserCountChangeNotify() {
  // @@protoc_insertion_point(destructor:zhu.room.RoomUserCountChangeNotify)
  SharedDtor();
}

void RoomUserCountChangeNotify::SharedDtor() {
}

void RoomUserCountChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomUserCountChangeNotify::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomUserCountChangeNotify& RoomUserCountChangeNotify::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoomUserCountChangeNotify* RoomUserCountChangeNotify::New(::google::protobuf::Arena* arena) const {
  RoomUserCountChangeNotify* n = new RoomUserCountChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomUserCountChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.RoomUserCountChangeNotify)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&id_) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoomUserCountChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.RoomUserCountChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.RoomUserCountChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.RoomUserCountChangeNotify)
  return false;
#undef DO_
}

void RoomUserCountChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.RoomUserCountChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.RoomUserCountChangeNotify)
}

::google::protobuf::uint8* RoomUserCountChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.RoomUserCountChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.RoomUserCountChangeNotify)
  return target;
}

size_t RoomUserCountChangeNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.room.RoomUserCountChangeNotify)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_count()) {
    // required uint32 count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t RoomUserCountChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.RoomUserCountChangeNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomUserCountChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.RoomUserCountChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomUserCountChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomUserCountChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.RoomUserCountChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.RoomUserCountChangeNotify)
    MergeFrom(*source);
  }
}

void RoomUserCountChangeNotify::MergeFrom(const RoomUserCountChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.RoomUserCountChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoomUserCountChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.RoomUserCountChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomUserCountChangeNotify::CopyFrom(const RoomUserCountChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.RoomUserCountChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomUserCountChangeNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RoomUserCountChangeNotify::Swap(RoomUserCountChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomUserCountChangeNotify::InternalSwap(RoomUserCountChangeNotify* other) {
  std::swap(id_, other->id_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomUserCountChangeNotify::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomUserCountChangeNotify

// required uint32 id = 1;
bool RoomUserCountChangeNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomUserCountChangeNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomUserCountChangeNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomUserCountChangeNotify::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RoomUserCountChangeNotify::id() const {
  // @@protoc_insertion_point(field_get:zhu.room.RoomUserCountChangeNotify.id)
  return id_;
}
void RoomUserCountChangeNotify::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.RoomUserCountChangeNotify.id)
}

// required uint32 count = 2;
bool RoomUserCountChangeNotify::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomUserCountChangeNotify::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomUserCountChangeNotify::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomUserCountChangeNotify::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 RoomUserCountChangeNotify::count() const {
  // @@protoc_insertion_point(field_get:zhu.room.RoomUserCountChangeNotify.count)
  return count_;
}
void RoomUserCountChangeNotify::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.RoomUserCountChangeNotify.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomGameStatuChangeNotify::kIdFieldNumber;
const int RoomGameStatuChangeNotify::kStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomGameStatuChangeNotify::RoomGameStatuChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_room_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zhu.room.RoomGameStatuChangeNotify)
}
RoomGameStatuChangeNotify::RoomGameStatuChangeNotify(const RoomGameStatuChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&start_) -
    reinterpret_cast<char*>(&id_) + sizeof(start_));
  // @@protoc_insertion_point(copy_constructor:zhu.room.RoomGameStatuChangeNotify)
}

void RoomGameStatuChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&start_) -
    reinterpret_cast<char*>(&id_) + sizeof(start_));
}

RoomGameStatuChangeNotify::~RoomGameStatuChangeNotify() {
  // @@protoc_insertion_point(destructor:zhu.room.RoomGameStatuChangeNotify)
  SharedDtor();
}

void RoomGameStatuChangeNotify::SharedDtor() {
}

void RoomGameStatuChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomGameStatuChangeNotify::descriptor() {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomGameStatuChangeNotify& RoomGameStatuChangeNotify::default_instance() {
  protobuf_room_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoomGameStatuChangeNotify* RoomGameStatuChangeNotify::New(::google::protobuf::Arena* arena) const {
  RoomGameStatuChangeNotify* n = new RoomGameStatuChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomGameStatuChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:zhu.room.RoomGameStatuChangeNotify)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&start_) -
      reinterpret_cast<char*>(&id_) + sizeof(start_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoomGameStatuChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zhu.room.RoomGameStatuChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zhu.room.RoomGameStatuChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zhu.room.RoomGameStatuChangeNotify)
  return false;
#undef DO_
}

void RoomGameStatuChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zhu.room.RoomGameStatuChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required bool start = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->start(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zhu.room.RoomGameStatuChangeNotify)
}

::google::protobuf::uint8* RoomGameStatuChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:zhu.room.RoomGameStatuChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required bool start = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->start(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zhu.room.RoomGameStatuChangeNotify)
  return target;
}

size_t RoomGameStatuChangeNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:zhu.room.RoomGameStatuChangeNotify)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_start()) {
    // required bool start = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t RoomGameStatuChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zhu.room.RoomGameStatuChangeNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required bool start = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomGameStatuChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zhu.room.RoomGameStatuChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomGameStatuChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomGameStatuChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zhu.room.RoomGameStatuChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zhu.room.RoomGameStatuChangeNotify)
    MergeFrom(*source);
  }
}

void RoomGameStatuChangeNotify::MergeFrom(const RoomGameStatuChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zhu.room.RoomGameStatuChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_ = from.start_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoomGameStatuChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zhu.room.RoomGameStatuChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomGameStatuChangeNotify::CopyFrom(const RoomGameStatuChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zhu.room.RoomGameStatuChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomGameStatuChangeNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RoomGameStatuChangeNotify::Swap(RoomGameStatuChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomGameStatuChangeNotify::InternalSwap(RoomGameStatuChangeNotify* other) {
  std::swap(id_, other->id_);
  std::swap(start_, other->start_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomGameStatuChangeNotify::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomGameStatuChangeNotify

// required uint32 id = 1;
bool RoomGameStatuChangeNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomGameStatuChangeNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomGameStatuChangeNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomGameStatuChangeNotify::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RoomGameStatuChangeNotify::id() const {
  // @@protoc_insertion_point(field_get:zhu.room.RoomGameStatuChangeNotify.id)
  return id_;
}
void RoomGameStatuChangeNotify::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.RoomGameStatuChangeNotify.id)
}

// required bool start = 2;
bool RoomGameStatuChangeNotify::has_start() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomGameStatuChangeNotify::set_has_start() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomGameStatuChangeNotify::clear_has_start() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomGameStatuChangeNotify::clear_start() {
  start_ = false;
  clear_has_start();
}
bool RoomGameStatuChangeNotify::start() const {
  // @@protoc_insertion_point(field_get:zhu.room.RoomGameStatuChangeNotify.start)
  return start_;
}
void RoomGameStatuChangeNotify::set_start(bool value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:zhu.room.RoomGameStatuChangeNotify.start)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace room
}  // namespace zhu

// @@protoc_insertion_point(global_scope)
